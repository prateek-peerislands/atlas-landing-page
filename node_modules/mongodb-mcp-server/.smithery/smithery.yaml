# Smithery.ai configuration
build:
  dockerfile: Dockerfile
  dockerBuildPath: ../
startCommand:
  type: stdio
  configSchema:
    type: object
    properties:
      atlasClientId:
        type: string
        title: Atlas Client Id
        description: Atlas API client ID for authentication. Required for running Atlas tools.
      atlasClientSecret:
        type: string
        title: Atlas Client Secret
        description: Atlas API client secret for authentication. Required for running Atlas tools.
      connectionString:
        type: string
        title: MongoDB Connection string
        description: MongoDB connection string for direct database connections. Optional, if not set, you'll need to call the `connect` tool before interacting with MongoDB data.
      readOnly:
        type: boolean
        title: Read-only
        description: When set to true, only allows read and metadata operation types, disabling create/update/delete operations.
        default: false
      indexCheck:
        type: boolean
        title: Index Check
        description: When set to true, enforces that query operations must use an index, rejecting queries that would perform a collection scan.
        default: false
  exampleConfig:
    atlasClientId: YOUR_ATLAS_CLIENT_ID
    atlasClientSecret: YOUR_ATLAS_CLIENT_SECRET
    connectionString: mongodb+srv://USERNAME:PASSWORD@YOUR_CLUSTER.mongodb.net
    readOnly: true
    indexCheck: false

  commandFunction:
    # A function that produces the CLI command to start the MCP on stdio.
    |-
    (config) => {
      const args = ['dist/index.js'];
      if (config) {
        if (config.atlasClientId) {
          args.push('--apiClientId');
          args.push(config.atlasClientId);
        }

        if (config.atlasClientSecret) {
          args.push('--apiClientSecret');
          args.push(config.atlasClientSecret);
        }

        if (config.readOnly) {
          args.push('--readOnly');
        }

        if (config.connectionString) {
          args.push('--connectionString');
          args.push(config.connectionString);
        }

        if (config.indexCheck) {
          args.push('--indexCheck');
        }
      }

      return {
        command: "node",
        args
      };
    }
