import { z } from "zod";
import { DbOperationArgs, MongoDBToolBase } from "../mongodbTool.js";
export class CreateIndexTool extends MongoDBToolBase {
    constructor() {
        super(...arguments);
        this.name = "create-index";
        this.description = "Create an index for a collection";
        this.argsShape = {
            ...DbOperationArgs,
            keys: z.object({}).catchall(z.custom()).describe("The index definition"),
            name: z.string().optional().describe("The name of the index"),
        };
        this.operationType = "create";
    }
    async execute({ database, collection, keys, name, }) {
        const provider = await this.ensureConnected();
        const indexes = await provider.createIndexes(database, collection, [
            {
                key: keys,
                name,
            },
        ]);
        return {
            content: [
                {
                    text: `Created the index "${indexes[0]}" on collection "${collection}" in database "${database}"`,
                    type: "text",
                },
            ],
        };
    }
}
//# sourceMappingURL=createIndex.js.map