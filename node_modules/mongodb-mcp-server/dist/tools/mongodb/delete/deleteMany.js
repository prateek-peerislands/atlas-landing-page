import { z } from "zod";
import { DbOperationArgs, MongoDBToolBase } from "../mongodbTool.js";
import { checkIndexUsage } from "../../../helpers/indexCheck.js";
export class DeleteManyTool extends MongoDBToolBase {
    constructor() {
        super(...arguments);
        this.name = "delete-many";
        this.description = "Removes all documents that match the filter from a MongoDB collection";
        this.argsShape = {
            ...DbOperationArgs,
            filter: z
                .object({})
                .passthrough()
                .optional()
                .describe("The query filter, specifying the deletion criteria. Matches the syntax of the filter argument of db.collection.deleteMany()"),
        };
        this.operationType = "delete";
    }
    async execute({ database, collection, filter, }) {
        const provider = await this.ensureConnected();
        // Check if delete operation uses an index if enabled
        if (this.config.indexCheck) {
            await checkIndexUsage(provider, database, collection, "deleteMany", async () => {
                return provider.runCommandWithCheck(database, {
                    explain: {
                        delete: collection,
                        deletes: [
                            {
                                q: filter || {},
                                limit: 0, // 0 means delete all matching documents
                            },
                        ],
                    },
                    verbosity: "queryPlanner",
                });
            });
        }
        const result = await provider.deleteMany(database, collection, filter);
        return {
            content: [
                {
                    text: `Deleted \`${result.deletedCount}\` document(s) from collection "${collection}"`,
                    type: "text",
                },
            ],
        };
    }
}
//# sourceMappingURL=deleteMany.js.map