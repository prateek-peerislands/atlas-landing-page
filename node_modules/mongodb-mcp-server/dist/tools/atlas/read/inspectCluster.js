import { z } from "zod";
import { AtlasToolBase } from "../atlasTool.js";
import { inspectCluster } from "../../../common/atlas/cluster.js";
export class InspectClusterTool extends AtlasToolBase {
    constructor() {
        super(...arguments);
        this.name = "atlas-inspect-cluster";
        this.description = "Inspect MongoDB Atlas cluster";
        this.operationType = "read";
        this.argsShape = {
            projectId: z.string().describe("Atlas project ID"),
            clusterName: z.string().describe("Atlas cluster name"),
        };
    }
    async execute({ projectId, clusterName }) {
        const cluster = await inspectCluster(this.session.apiClient, projectId, clusterName);
        return this.formatOutput(cluster);
    }
    formatOutput(formattedCluster) {
        return {
            content: [
                {
                    type: "text",
                    text: `Cluster Name | Cluster Type | Tier | State | MongoDB Version | Connection String
----------------|----------------|----------------|----------------|----------------|----------------
${formattedCluster.name || "Unknown"} | ${formattedCluster.instanceType} | ${formattedCluster.instanceSize || "N/A"} | ${formattedCluster.state || "UNKNOWN"} | ${formattedCluster.mongoDBVersion || "N/A"} | ${formattedCluster.connectionString || "N/A"}`,
                },
            ],
        };
    }
}
//# sourceMappingURL=inspectCluster.js.map