import { AtlasToolBase } from "../atlasTool.js";
import { z } from "zod";
export class ListProjectsTool extends AtlasToolBase {
    constructor() {
        super(...arguments);
        this.name = "atlas-list-projects";
        this.description = "List MongoDB Atlas projects";
        this.operationType = "read";
        this.argsShape = {
            orgId: z.string().describe("Atlas organization ID to filter projects").optional(),
        };
    }
    async execute({ orgId }) {
        const orgData = await this.session.apiClient.listOrganizations();
        if (!orgData?.results?.length) {
            throw new Error("No organizations found in your MongoDB Atlas account.");
        }
        const orgs = orgData.results
            .map((org) => [org.id || "", org.name])
            .filter(([id]) => id)
            .reduce((acc, [id, name]) => ({ ...acc, [id]: name }), {});
        const data = orgId
            ? await this.session.apiClient.listOrganizationProjects({
                params: {
                    path: {
                        orgId,
                    },
                },
            })
            : await this.session.apiClient.listProjects();
        if (!data?.results?.length) {
            throw new Error("No projects found in your MongoDB Atlas account.");
        }
        // Format projects as a table
        const rows = data.results
            .map((project) => {
            const createdAt = project.created ? new Date(project.created).toLocaleString() : "N/A";
            const orgName = orgs[project.orgId] ?? "N/A";
            return `${project.name} | ${project.id} | ${orgName} | ${project.orgId} | ${createdAt}`;
        })
            .join("\n");
        const formattedProjects = `Project Name | Project ID | Organization Name | Organization ID | Created At
----------------| ----------------| ----------------| ----------------| ----------------
${rows}`;
        return {
            content: [{ type: "text", text: formattedProjects }],
        };
    }
}
//# sourceMappingURL=listProjects.js.map