import * as pulumi from "@pulumi/pulumi";
import * as outputs from "./types/output";
/**
 * ## # Data Source: mongodbatlas.getResourcePolicies
 *
 * `mongodbatlas.getResourcePolicies` returns all resource policies in an organization.
 *
 * ## Example Usage
 */
export declare function getResourcePolicies(args: GetResourcePoliciesArgs, opts?: pulumi.InvokeOptions): Promise<GetResourcePoliciesResult>;
/**
 * A collection of arguments for invoking getResourcePolicies.
 */
export interface GetResourcePoliciesArgs {
    /**
     * Unique 24-hexadecimal digit string that identifies the organization that contains your projects. Use the /orgs endpoint to retrieve all organizations to which the authenticated user has access.
     */
    orgId: string;
}
/**
 * A collection of values returned by getResourcePolicies.
 */
export interface GetResourcePoliciesResult {
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * Unique 24-hexadecimal digit string that identifies the organization that contains your projects. Use the /orgs endpoint to retrieve all organizations to which the authenticated user has access.
     */
    readonly orgId: string;
    /**
     * @deprecated This parameter is deprecated. Please transition to `results`.
     */
    readonly resourcePolicies: outputs.GetResourcePoliciesResourcePolicy[];
    /**
     * List of documents that MongoDB Cloud returns for this request.
     */
    readonly results: outputs.GetResourcePoliciesResult[];
}
/**
 * ## # Data Source: mongodbatlas.getResourcePolicies
 *
 * `mongodbatlas.getResourcePolicies` returns all resource policies in an organization.
 *
 * ## Example Usage
 */
export declare function getResourcePoliciesOutput(args: GetResourcePoliciesOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetResourcePoliciesResult>;
/**
 * A collection of arguments for invoking getResourcePolicies.
 */
export interface GetResourcePoliciesOutputArgs {
    /**
     * Unique 24-hexadecimal digit string that identifies the organization that contains your projects. Use the /orgs endpoint to retrieve all organizations to which the authenticated user has access.
     */
    orgId: pulumi.Input<string>;
}
