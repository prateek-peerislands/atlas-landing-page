"use strict";
// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.getApiKeys = exports.getApiKeyProjectAssignmentsOutput = exports.getApiKeyProjectAssignments = exports.getApiKeyProjectAssignmentOutput = exports.getApiKeyProjectAssignment = exports.getApiKeyOutput = exports.getApiKey = exports.getAlertConfigurationsOutput = exports.getAlertConfigurations = exports.getAlertConfigurationOutput = exports.getAlertConfiguration = exports.getAdvancedClustersOutput = exports.getAdvancedClusters = exports.getAdvancedClusterOutput = exports.getAdvancedCluster = exports.getAccessListApiKeysOutput = exports.getAccessListApiKeys = exports.getAccessListApiKeyOutput = exports.getAccessListApiKey = exports.get509AuthenticationDatabaseUserOutput = exports.get509AuthenticationDatabaseUser = exports.FlexCluster = exports.FederatedSettingsOrgRoleMapping = exports.FederatedSettingsOrgConfig = exports.FederatedSettingsIdentityProvider = exports.FederatedQueryLimit = exports.FederatedDatabaseInstance = exports.EventTrigger = exports.EncryptionAtRestPrivateEndpoint = exports.EncryptionAtRest = exports.DatabaseUser = exports.DataLakePipeline = exports.CustomDnsConfigurationClusterAws = exports.CustomDbRole = exports.ClusterOutageSimulation = exports.Cluster = exports.CloudProviderAccessSetup = exports.CloudProviderAccessAuthorization = exports.CloudBackupSnapshotRestoreJob = exports.CloudBackupSnapshotExportJob = exports.CloudBackupSnapshotExportBucket = exports.CloudBackupSnapshot = exports.CloudBackupSchedule = exports.BackupCompliancePolicy = exports.Auditing = exports.ApiKeyProjectAssignment = exports.ApiKey = exports.AlertConfiguration = exports.AdvancedCluster = exports.AccessListApiKey = void 0;
exports.getDataLakePipelines = exports.getDataLakePipelineRunsOutput = exports.getDataLakePipelineRuns = exports.getDataLakePipelineRunOutput = exports.getDataLakePipelineRun = exports.getDataLakePipelineOutput = exports.getDataLakePipeline = exports.getCustomDnsConfigurationClusterAwsOutput = exports.getCustomDnsConfigurationClusterAws = exports.getCustomDbRolesOutput = exports.getCustomDbRoles = exports.getCustomDbRoleOutput = exports.getCustomDbRole = exports.getControlPlaneIpAddressesOutput = exports.getControlPlaneIpAddresses = exports.getClustersOutput = exports.getClusters = exports.getClusterOutageSimulationOutput = exports.getClusterOutageSimulation = exports.getClusterOutput = exports.getCluster = exports.getCloudProviderAccessSetupOutput = exports.getCloudProviderAccessSetup = exports.getCloudBackupSnapshotsOutput = exports.getCloudBackupSnapshots = exports.getCloudBackupSnapshotRestoreJobsOutput = exports.getCloudBackupSnapshotRestoreJobs = exports.getCloudBackupSnapshotRestoreJobOutput = exports.getCloudBackupSnapshotRestoreJob = exports.getCloudBackupSnapshotExportJobsOutput = exports.getCloudBackupSnapshotExportJobs = exports.getCloudBackupSnapshotExportJobOutput = exports.getCloudBackupSnapshotExportJob = exports.getCloudBackupSnapshotExportBucketsOutput = exports.getCloudBackupSnapshotExportBuckets = exports.getCloudBackupSnapshotExportBucketOutput = exports.getCloudBackupSnapshotExportBucket = exports.getCloudBackupSnapshotOutput = exports.getCloudBackupSnapshot = exports.getCloudBackupScheduleOutput = exports.getCloudBackupSchedule = exports.getBackupCompliancePolicyOutput = exports.getBackupCompliancePolicy = exports.getAuditingOutput = exports.getAuditing = exports.getAtlasUsersOutput = exports.getAtlasUsers = exports.getAtlasUserOutput = exports.getAtlasUser = exports.getApiKeysOutput = void 0;
exports.getGlobalClusterConfig = exports.getFlexSnapshotsOutput = exports.getFlexSnapshots = exports.getFlexSnapshotOutput = exports.getFlexSnapshot = exports.getFlexRestoreJobsOutput = exports.getFlexRestoreJobs = exports.getFlexRestoreJobOutput = exports.getFlexRestoreJob = exports.getFlexClustersOutput = exports.getFlexClusters = exports.getFlexClusterOutput = exports.getFlexCluster = exports.getFederatedSettingsOrgRoleMappingsOutput = exports.getFederatedSettingsOrgRoleMappings = exports.getFederatedSettingsOrgRoleMappingOutput = exports.getFederatedSettingsOrgRoleMapping = exports.getFederatedSettingsOrgConfigsOutput = exports.getFederatedSettingsOrgConfigs = exports.getFederatedSettingsOrgConfigOutput = exports.getFederatedSettingsOrgConfig = exports.getFederatedSettingsIdentityProvidersOutput = exports.getFederatedSettingsIdentityProviders = exports.getFederatedSettingsIdentityProviderOutput = exports.getFederatedSettingsIdentityProvider = exports.getFederatedSettingsOutput = exports.getFederatedSettings = exports.getFederatedQueryLimitsOutput = exports.getFederatedQueryLimits = exports.getFederatedQueryLimitOutput = exports.getFederatedQueryLimit = exports.getFederatedDatabaseInstancesOutput = exports.getFederatedDatabaseInstances = exports.getFederatedDatabaseInstanceOutput = exports.getFederatedDatabaseInstance = exports.getEventTriggersOutput = exports.getEventTriggers = exports.getEventTriggerOutput = exports.getEventTrigger = exports.getEncryptionAtRestPrivateEndpointsOutput = exports.getEncryptionAtRestPrivateEndpoints = exports.getEncryptionAtRestPrivateEndpointOutput = exports.getEncryptionAtRestPrivateEndpoint = exports.getEncryptionAtRestOutput = exports.getEncryptionAtRest = exports.getDatabaseUsersOutput = exports.getDatabaseUsers = exports.getDatabaseUserOutput = exports.getDatabaseUser = exports.getDataLakePipelinesOutput = void 0;
exports.getProjectIpAccessList = exports.getProjectInvitationOutput = exports.getProjectInvitation = exports.getProjectApiKeysOutput = exports.getProjectApiKeys = exports.getProjectApiKeyOutput = exports.getProjectApiKey = exports.getProjectOutput = exports.getProject = exports.getPrivatelinkEndpointsServiceServerlessOutput = exports.getPrivatelinkEndpointsServiceServerless = exports.getPrivatelinkEndpointServiceServerlessOutput = exports.getPrivatelinkEndpointServiceServerless = exports.getPrivatelinkEndpointServiceDataFederationOnlineArchivesOutput = exports.getPrivatelinkEndpointServiceDataFederationOnlineArchives = exports.getPrivatelinkEndpointServiceDataFederationOnlineArchiveOutput = exports.getPrivatelinkEndpointServiceDataFederationOnlineArchive = exports.getPrivateLinkEndpointServiceOutput = exports.getPrivateLinkEndpointService = exports.getPrivateLinkEndpointOutput = exports.getPrivateLinkEndpoint = exports.getPrivateEndpointRegionalModeOutput = exports.getPrivateEndpointRegionalMode = exports.getOrganizationsOutput = exports.getOrganizations = exports.getOrganizationOutput = exports.getOrganization = exports.getOrgInvitationOutput = exports.getOrgInvitation = exports.getOnlineArchivesOutput = exports.getOnlineArchives = exports.getOnlineArchiveOutput = exports.getOnlineArchive = exports.getNetworkPeeringsOutput = exports.getNetworkPeerings = exports.getNetworkPeeringOutput = exports.getNetworkPeering = exports.getNetworkContainersOutput = exports.getNetworkContainers = exports.getNetworkContainerOutput = exports.getNetworkContainer = exports.getMongodbEmployeeAccessGrantOutput = exports.getMongodbEmployeeAccessGrant = exports.getMaintenanceWindowOutput = exports.getMaintenanceWindow = exports.getLdapVerifyOutput = exports.getLdapVerify = exports.getLdapConfigurationOutput = exports.getLdapConfiguration = exports.getGlobalClusterConfigOutput = void 0;
exports.getTeam = exports.getStreamProcessorsOutput = exports.getStreamProcessors = exports.getStreamProcessorOutput = exports.getStreamProcessor = exports.getStreamPrivatelinkEndpointsOutput = exports.getStreamPrivatelinkEndpoints = exports.getStreamPrivatelinkEndpointOutput = exports.getStreamPrivatelinkEndpoint = exports.getStreamInstancesOutput = exports.getStreamInstances = exports.getStreamInstanceOutput = exports.getStreamInstance = exports.getStreamConnectionsOutput = exports.getStreamConnections = exports.getStreamConnectionOutput = exports.getStreamConnection = exports.getStreamAccountDetailsOutput = exports.getStreamAccountDetails = exports.getSharedTierSnapshotsOutput = exports.getSharedTierSnapshots = exports.getSharedTierSnapshotOutput = exports.getSharedTierSnapshot = exports.getSharedTierRestoreJobsOutput = exports.getSharedTierRestoreJobs = exports.getSharedTierRestoreJobOutput = exports.getSharedTierRestoreJob = exports.getServerlessInstancesOutput = exports.getServerlessInstances = exports.getServerlessInstanceOutput = exports.getServerlessInstance = exports.getSearchIndexesOutput = exports.getSearchIndexes = exports.getSearchIndexOutput = exports.getSearchIndex = exports.getSearchDeploymentOutput = exports.getSearchDeployment = exports.getRolesOrgIdOutput = exports.getRolesOrgId = exports.getResourcePolicyOutput = exports.getResourcePolicy = exports.getResourcePoliciesOutput = exports.getResourcePolicies = exports.getPushBasedLogExportOutput = exports.getPushBasedLogExport = exports.getProjectsOutput = exports.getProjects = exports.getProjectIpAddressesOutput = exports.getProjectIpAddresses = exports.getProjectIpAccessListOutput = void 0;
exports.types = exports.config = exports.X509AuthenticationDatabaseUser = exports.ThirdPartyIntegration = exports.Teams = exports.Team = exports.StreamProcessor = exports.StreamPrivatelinkEndpoint = exports.StreamInstance = exports.StreamConnection = exports.ServerlessInstance = exports.SearchIndex = exports.SearchDeployment = exports.ResourcePolicy = exports.PushBasedLogExport = exports.ProjectIpAccessList = exports.ProjectInvitation = exports.ProjectApiKey = exports.Project = exports.PrivatelinkEndpointServiceServerless = exports.PrivatelinkEndpointServiceDataFederationOnlineArchive = exports.PrivatelinkEndpointServerless = exports.PrivateLinkEndpointService = exports.PrivateLinkEndpoint = exports.PrivateEndpointRegionalMode = exports.Organization = exports.OrgInvitation = exports.OnlineArchive = exports.NetworkPeering = exports.NetworkContainer = exports.MongodbEmployeeAccessGrant = exports.MaintenanceWindow = exports.LdapVerify = exports.LdapConfiguration = exports.GlobalClusterConfig = exports.getX509AuthenticationDatabaseUserOutput = exports.getX509AuthenticationDatabaseUser = exports.getThirdPartyIntegrationsOutput = exports.getThirdPartyIntegrations = exports.getThirdPartyIntegrationOutput = exports.getThirdPartyIntegration = exports.getTeamsOutput = exports.getTeams = exports.getTeamOutput = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("./utilities");
exports.AccessListApiKey = null;
utilities.lazyLoad(exports, ["AccessListApiKey"], () => require("./accessListApiKey"));
exports.AdvancedCluster = null;
utilities.lazyLoad(exports, ["AdvancedCluster"], () => require("./advancedCluster"));
exports.AlertConfiguration = null;
utilities.lazyLoad(exports, ["AlertConfiguration"], () => require("./alertConfiguration"));
exports.ApiKey = null;
utilities.lazyLoad(exports, ["ApiKey"], () => require("./apiKey"));
exports.ApiKeyProjectAssignment = null;
utilities.lazyLoad(exports, ["ApiKeyProjectAssignment"], () => require("./apiKeyProjectAssignment"));
exports.Auditing = null;
utilities.lazyLoad(exports, ["Auditing"], () => require("./auditing"));
exports.BackupCompliancePolicy = null;
utilities.lazyLoad(exports, ["BackupCompliancePolicy"], () => require("./backupCompliancePolicy"));
exports.CloudBackupSchedule = null;
utilities.lazyLoad(exports, ["CloudBackupSchedule"], () => require("./cloudBackupSchedule"));
exports.CloudBackupSnapshot = null;
utilities.lazyLoad(exports, ["CloudBackupSnapshot"], () => require("./cloudBackupSnapshot"));
exports.CloudBackupSnapshotExportBucket = null;
utilities.lazyLoad(exports, ["CloudBackupSnapshotExportBucket"], () => require("./cloudBackupSnapshotExportBucket"));
exports.CloudBackupSnapshotExportJob = null;
utilities.lazyLoad(exports, ["CloudBackupSnapshotExportJob"], () => require("./cloudBackupSnapshotExportJob"));
exports.CloudBackupSnapshotRestoreJob = null;
utilities.lazyLoad(exports, ["CloudBackupSnapshotRestoreJob"], () => require("./cloudBackupSnapshotRestoreJob"));
exports.CloudProviderAccessAuthorization = null;
utilities.lazyLoad(exports, ["CloudProviderAccessAuthorization"], () => require("./cloudProviderAccessAuthorization"));
exports.CloudProviderAccessSetup = null;
utilities.lazyLoad(exports, ["CloudProviderAccessSetup"], () => require("./cloudProviderAccessSetup"));
exports.Cluster = null;
utilities.lazyLoad(exports, ["Cluster"], () => require("./cluster"));
exports.ClusterOutageSimulation = null;
utilities.lazyLoad(exports, ["ClusterOutageSimulation"], () => require("./clusterOutageSimulation"));
exports.CustomDbRole = null;
utilities.lazyLoad(exports, ["CustomDbRole"], () => require("./customDbRole"));
exports.CustomDnsConfigurationClusterAws = null;
utilities.lazyLoad(exports, ["CustomDnsConfigurationClusterAws"], () => require("./customDnsConfigurationClusterAws"));
exports.DataLakePipeline = null;
utilities.lazyLoad(exports, ["DataLakePipeline"], () => require("./dataLakePipeline"));
exports.DatabaseUser = null;
utilities.lazyLoad(exports, ["DatabaseUser"], () => require("./databaseUser"));
exports.EncryptionAtRest = null;
utilities.lazyLoad(exports, ["EncryptionAtRest"], () => require("./encryptionAtRest"));
exports.EncryptionAtRestPrivateEndpoint = null;
utilities.lazyLoad(exports, ["EncryptionAtRestPrivateEndpoint"], () => require("./encryptionAtRestPrivateEndpoint"));
exports.EventTrigger = null;
utilities.lazyLoad(exports, ["EventTrigger"], () => require("./eventTrigger"));
exports.FederatedDatabaseInstance = null;
utilities.lazyLoad(exports, ["FederatedDatabaseInstance"], () => require("./federatedDatabaseInstance"));
exports.FederatedQueryLimit = null;
utilities.lazyLoad(exports, ["FederatedQueryLimit"], () => require("./federatedQueryLimit"));
exports.FederatedSettingsIdentityProvider = null;
utilities.lazyLoad(exports, ["FederatedSettingsIdentityProvider"], () => require("./federatedSettingsIdentityProvider"));
exports.FederatedSettingsOrgConfig = null;
utilities.lazyLoad(exports, ["FederatedSettingsOrgConfig"], () => require("./federatedSettingsOrgConfig"));
exports.FederatedSettingsOrgRoleMapping = null;
utilities.lazyLoad(exports, ["FederatedSettingsOrgRoleMapping"], () => require("./federatedSettingsOrgRoleMapping"));
exports.FlexCluster = null;
utilities.lazyLoad(exports, ["FlexCluster"], () => require("./flexCluster"));
exports.get509AuthenticationDatabaseUser = null;
exports.get509AuthenticationDatabaseUserOutput = null;
utilities.lazyLoad(exports, ["get509AuthenticationDatabaseUser", "get509AuthenticationDatabaseUserOutput"], () => require("./get509AuthenticationDatabaseUser"));
exports.getAccessListApiKey = null;
exports.getAccessListApiKeyOutput = null;
utilities.lazyLoad(exports, ["getAccessListApiKey", "getAccessListApiKeyOutput"], () => require("./getAccessListApiKey"));
exports.getAccessListApiKeys = null;
exports.getAccessListApiKeysOutput = null;
utilities.lazyLoad(exports, ["getAccessListApiKeys", "getAccessListApiKeysOutput"], () => require("./getAccessListApiKeys"));
exports.getAdvancedCluster = null;
exports.getAdvancedClusterOutput = null;
utilities.lazyLoad(exports, ["getAdvancedCluster", "getAdvancedClusterOutput"], () => require("./getAdvancedCluster"));
exports.getAdvancedClusters = null;
exports.getAdvancedClustersOutput = null;
utilities.lazyLoad(exports, ["getAdvancedClusters", "getAdvancedClustersOutput"], () => require("./getAdvancedClusters"));
exports.getAlertConfiguration = null;
exports.getAlertConfigurationOutput = null;
utilities.lazyLoad(exports, ["getAlertConfiguration", "getAlertConfigurationOutput"], () => require("./getAlertConfiguration"));
exports.getAlertConfigurations = null;
exports.getAlertConfigurationsOutput = null;
utilities.lazyLoad(exports, ["getAlertConfigurations", "getAlertConfigurationsOutput"], () => require("./getAlertConfigurations"));
exports.getApiKey = null;
exports.getApiKeyOutput = null;
utilities.lazyLoad(exports, ["getApiKey", "getApiKeyOutput"], () => require("./getApiKey"));
exports.getApiKeyProjectAssignment = null;
exports.getApiKeyProjectAssignmentOutput = null;
utilities.lazyLoad(exports, ["getApiKeyProjectAssignment", "getApiKeyProjectAssignmentOutput"], () => require("./getApiKeyProjectAssignment"));
exports.getApiKeyProjectAssignments = null;
exports.getApiKeyProjectAssignmentsOutput = null;
utilities.lazyLoad(exports, ["getApiKeyProjectAssignments", "getApiKeyProjectAssignmentsOutput"], () => require("./getApiKeyProjectAssignments"));
exports.getApiKeys = null;
exports.getApiKeysOutput = null;
utilities.lazyLoad(exports, ["getApiKeys", "getApiKeysOutput"], () => require("./getApiKeys"));
exports.getAtlasUser = null;
exports.getAtlasUserOutput = null;
utilities.lazyLoad(exports, ["getAtlasUser", "getAtlasUserOutput"], () => require("./getAtlasUser"));
exports.getAtlasUsers = null;
exports.getAtlasUsersOutput = null;
utilities.lazyLoad(exports, ["getAtlasUsers", "getAtlasUsersOutput"], () => require("./getAtlasUsers"));
exports.getAuditing = null;
exports.getAuditingOutput = null;
utilities.lazyLoad(exports, ["getAuditing", "getAuditingOutput"], () => require("./getAuditing"));
exports.getBackupCompliancePolicy = null;
exports.getBackupCompliancePolicyOutput = null;
utilities.lazyLoad(exports, ["getBackupCompliancePolicy", "getBackupCompliancePolicyOutput"], () => require("./getBackupCompliancePolicy"));
exports.getCloudBackupSchedule = null;
exports.getCloudBackupScheduleOutput = null;
utilities.lazyLoad(exports, ["getCloudBackupSchedule", "getCloudBackupScheduleOutput"], () => require("./getCloudBackupSchedule"));
exports.getCloudBackupSnapshot = null;
exports.getCloudBackupSnapshotOutput = null;
utilities.lazyLoad(exports, ["getCloudBackupSnapshot", "getCloudBackupSnapshotOutput"], () => require("./getCloudBackupSnapshot"));
exports.getCloudBackupSnapshotExportBucket = null;
exports.getCloudBackupSnapshotExportBucketOutput = null;
utilities.lazyLoad(exports, ["getCloudBackupSnapshotExportBucket", "getCloudBackupSnapshotExportBucketOutput"], () => require("./getCloudBackupSnapshotExportBucket"));
exports.getCloudBackupSnapshotExportBuckets = null;
exports.getCloudBackupSnapshotExportBucketsOutput = null;
utilities.lazyLoad(exports, ["getCloudBackupSnapshotExportBuckets", "getCloudBackupSnapshotExportBucketsOutput"], () => require("./getCloudBackupSnapshotExportBuckets"));
exports.getCloudBackupSnapshotExportJob = null;
exports.getCloudBackupSnapshotExportJobOutput = null;
utilities.lazyLoad(exports, ["getCloudBackupSnapshotExportJob", "getCloudBackupSnapshotExportJobOutput"], () => require("./getCloudBackupSnapshotExportJob"));
exports.getCloudBackupSnapshotExportJobs = null;
exports.getCloudBackupSnapshotExportJobsOutput = null;
utilities.lazyLoad(exports, ["getCloudBackupSnapshotExportJobs", "getCloudBackupSnapshotExportJobsOutput"], () => require("./getCloudBackupSnapshotExportJobs"));
exports.getCloudBackupSnapshotRestoreJob = null;
exports.getCloudBackupSnapshotRestoreJobOutput = null;
utilities.lazyLoad(exports, ["getCloudBackupSnapshotRestoreJob", "getCloudBackupSnapshotRestoreJobOutput"], () => require("./getCloudBackupSnapshotRestoreJob"));
exports.getCloudBackupSnapshotRestoreJobs = null;
exports.getCloudBackupSnapshotRestoreJobsOutput = null;
utilities.lazyLoad(exports, ["getCloudBackupSnapshotRestoreJobs", "getCloudBackupSnapshotRestoreJobsOutput"], () => require("./getCloudBackupSnapshotRestoreJobs"));
exports.getCloudBackupSnapshots = null;
exports.getCloudBackupSnapshotsOutput = null;
utilities.lazyLoad(exports, ["getCloudBackupSnapshots", "getCloudBackupSnapshotsOutput"], () => require("./getCloudBackupSnapshots"));
exports.getCloudProviderAccessSetup = null;
exports.getCloudProviderAccessSetupOutput = null;
utilities.lazyLoad(exports, ["getCloudProviderAccessSetup", "getCloudProviderAccessSetupOutput"], () => require("./getCloudProviderAccessSetup"));
exports.getCluster = null;
exports.getClusterOutput = null;
utilities.lazyLoad(exports, ["getCluster", "getClusterOutput"], () => require("./getCluster"));
exports.getClusterOutageSimulation = null;
exports.getClusterOutageSimulationOutput = null;
utilities.lazyLoad(exports, ["getClusterOutageSimulation", "getClusterOutageSimulationOutput"], () => require("./getClusterOutageSimulation"));
exports.getClusters = null;
exports.getClustersOutput = null;
utilities.lazyLoad(exports, ["getClusters", "getClustersOutput"], () => require("./getClusters"));
exports.getControlPlaneIpAddresses = null;
exports.getControlPlaneIpAddressesOutput = null;
utilities.lazyLoad(exports, ["getControlPlaneIpAddresses", "getControlPlaneIpAddressesOutput"], () => require("./getControlPlaneIpAddresses"));
exports.getCustomDbRole = null;
exports.getCustomDbRoleOutput = null;
utilities.lazyLoad(exports, ["getCustomDbRole", "getCustomDbRoleOutput"], () => require("./getCustomDbRole"));
exports.getCustomDbRoles = null;
exports.getCustomDbRolesOutput = null;
utilities.lazyLoad(exports, ["getCustomDbRoles", "getCustomDbRolesOutput"], () => require("./getCustomDbRoles"));
exports.getCustomDnsConfigurationClusterAws = null;
exports.getCustomDnsConfigurationClusterAwsOutput = null;
utilities.lazyLoad(exports, ["getCustomDnsConfigurationClusterAws", "getCustomDnsConfigurationClusterAwsOutput"], () => require("./getCustomDnsConfigurationClusterAws"));
exports.getDataLakePipeline = null;
exports.getDataLakePipelineOutput = null;
utilities.lazyLoad(exports, ["getDataLakePipeline", "getDataLakePipelineOutput"], () => require("./getDataLakePipeline"));
exports.getDataLakePipelineRun = null;
exports.getDataLakePipelineRunOutput = null;
utilities.lazyLoad(exports, ["getDataLakePipelineRun", "getDataLakePipelineRunOutput"], () => require("./getDataLakePipelineRun"));
exports.getDataLakePipelineRuns = null;
exports.getDataLakePipelineRunsOutput = null;
utilities.lazyLoad(exports, ["getDataLakePipelineRuns", "getDataLakePipelineRunsOutput"], () => require("./getDataLakePipelineRuns"));
exports.getDataLakePipelines = null;
exports.getDataLakePipelinesOutput = null;
utilities.lazyLoad(exports, ["getDataLakePipelines", "getDataLakePipelinesOutput"], () => require("./getDataLakePipelines"));
exports.getDatabaseUser = null;
exports.getDatabaseUserOutput = null;
utilities.lazyLoad(exports, ["getDatabaseUser", "getDatabaseUserOutput"], () => require("./getDatabaseUser"));
exports.getDatabaseUsers = null;
exports.getDatabaseUsersOutput = null;
utilities.lazyLoad(exports, ["getDatabaseUsers", "getDatabaseUsersOutput"], () => require("./getDatabaseUsers"));
exports.getEncryptionAtRest = null;
exports.getEncryptionAtRestOutput = null;
utilities.lazyLoad(exports, ["getEncryptionAtRest", "getEncryptionAtRestOutput"], () => require("./getEncryptionAtRest"));
exports.getEncryptionAtRestPrivateEndpoint = null;
exports.getEncryptionAtRestPrivateEndpointOutput = null;
utilities.lazyLoad(exports, ["getEncryptionAtRestPrivateEndpoint", "getEncryptionAtRestPrivateEndpointOutput"], () => require("./getEncryptionAtRestPrivateEndpoint"));
exports.getEncryptionAtRestPrivateEndpoints = null;
exports.getEncryptionAtRestPrivateEndpointsOutput = null;
utilities.lazyLoad(exports, ["getEncryptionAtRestPrivateEndpoints", "getEncryptionAtRestPrivateEndpointsOutput"], () => require("./getEncryptionAtRestPrivateEndpoints"));
exports.getEventTrigger = null;
exports.getEventTriggerOutput = null;
utilities.lazyLoad(exports, ["getEventTrigger", "getEventTriggerOutput"], () => require("./getEventTrigger"));
exports.getEventTriggers = null;
exports.getEventTriggersOutput = null;
utilities.lazyLoad(exports, ["getEventTriggers", "getEventTriggersOutput"], () => require("./getEventTriggers"));
exports.getFederatedDatabaseInstance = null;
exports.getFederatedDatabaseInstanceOutput = null;
utilities.lazyLoad(exports, ["getFederatedDatabaseInstance", "getFederatedDatabaseInstanceOutput"], () => require("./getFederatedDatabaseInstance"));
exports.getFederatedDatabaseInstances = null;
exports.getFederatedDatabaseInstancesOutput = null;
utilities.lazyLoad(exports, ["getFederatedDatabaseInstances", "getFederatedDatabaseInstancesOutput"], () => require("./getFederatedDatabaseInstances"));
exports.getFederatedQueryLimit = null;
exports.getFederatedQueryLimitOutput = null;
utilities.lazyLoad(exports, ["getFederatedQueryLimit", "getFederatedQueryLimitOutput"], () => require("./getFederatedQueryLimit"));
exports.getFederatedQueryLimits = null;
exports.getFederatedQueryLimitsOutput = null;
utilities.lazyLoad(exports, ["getFederatedQueryLimits", "getFederatedQueryLimitsOutput"], () => require("./getFederatedQueryLimits"));
exports.getFederatedSettings = null;
exports.getFederatedSettingsOutput = null;
utilities.lazyLoad(exports, ["getFederatedSettings", "getFederatedSettingsOutput"], () => require("./getFederatedSettings"));
exports.getFederatedSettingsIdentityProvider = null;
exports.getFederatedSettingsIdentityProviderOutput = null;
utilities.lazyLoad(exports, ["getFederatedSettingsIdentityProvider", "getFederatedSettingsIdentityProviderOutput"], () => require("./getFederatedSettingsIdentityProvider"));
exports.getFederatedSettingsIdentityProviders = null;
exports.getFederatedSettingsIdentityProvidersOutput = null;
utilities.lazyLoad(exports, ["getFederatedSettingsIdentityProviders", "getFederatedSettingsIdentityProvidersOutput"], () => require("./getFederatedSettingsIdentityProviders"));
exports.getFederatedSettingsOrgConfig = null;
exports.getFederatedSettingsOrgConfigOutput = null;
utilities.lazyLoad(exports, ["getFederatedSettingsOrgConfig", "getFederatedSettingsOrgConfigOutput"], () => require("./getFederatedSettingsOrgConfig"));
exports.getFederatedSettingsOrgConfigs = null;
exports.getFederatedSettingsOrgConfigsOutput = null;
utilities.lazyLoad(exports, ["getFederatedSettingsOrgConfigs", "getFederatedSettingsOrgConfigsOutput"], () => require("./getFederatedSettingsOrgConfigs"));
exports.getFederatedSettingsOrgRoleMapping = null;
exports.getFederatedSettingsOrgRoleMappingOutput = null;
utilities.lazyLoad(exports, ["getFederatedSettingsOrgRoleMapping", "getFederatedSettingsOrgRoleMappingOutput"], () => require("./getFederatedSettingsOrgRoleMapping"));
exports.getFederatedSettingsOrgRoleMappings = null;
exports.getFederatedSettingsOrgRoleMappingsOutput = null;
utilities.lazyLoad(exports, ["getFederatedSettingsOrgRoleMappings", "getFederatedSettingsOrgRoleMappingsOutput"], () => require("./getFederatedSettingsOrgRoleMappings"));
exports.getFlexCluster = null;
exports.getFlexClusterOutput = null;
utilities.lazyLoad(exports, ["getFlexCluster", "getFlexClusterOutput"], () => require("./getFlexCluster"));
exports.getFlexClusters = null;
exports.getFlexClustersOutput = null;
utilities.lazyLoad(exports, ["getFlexClusters", "getFlexClustersOutput"], () => require("./getFlexClusters"));
exports.getFlexRestoreJob = null;
exports.getFlexRestoreJobOutput = null;
utilities.lazyLoad(exports, ["getFlexRestoreJob", "getFlexRestoreJobOutput"], () => require("./getFlexRestoreJob"));
exports.getFlexRestoreJobs = null;
exports.getFlexRestoreJobsOutput = null;
utilities.lazyLoad(exports, ["getFlexRestoreJobs", "getFlexRestoreJobsOutput"], () => require("./getFlexRestoreJobs"));
exports.getFlexSnapshot = null;
exports.getFlexSnapshotOutput = null;
utilities.lazyLoad(exports, ["getFlexSnapshot", "getFlexSnapshotOutput"], () => require("./getFlexSnapshot"));
exports.getFlexSnapshots = null;
exports.getFlexSnapshotsOutput = null;
utilities.lazyLoad(exports, ["getFlexSnapshots", "getFlexSnapshotsOutput"], () => require("./getFlexSnapshots"));
exports.getGlobalClusterConfig = null;
exports.getGlobalClusterConfigOutput = null;
utilities.lazyLoad(exports, ["getGlobalClusterConfig", "getGlobalClusterConfigOutput"], () => require("./getGlobalClusterConfig"));
exports.getLdapConfiguration = null;
exports.getLdapConfigurationOutput = null;
utilities.lazyLoad(exports, ["getLdapConfiguration", "getLdapConfigurationOutput"], () => require("./getLdapConfiguration"));
exports.getLdapVerify = null;
exports.getLdapVerifyOutput = null;
utilities.lazyLoad(exports, ["getLdapVerify", "getLdapVerifyOutput"], () => require("./getLdapVerify"));
exports.getMaintenanceWindow = null;
exports.getMaintenanceWindowOutput = null;
utilities.lazyLoad(exports, ["getMaintenanceWindow", "getMaintenanceWindowOutput"], () => require("./getMaintenanceWindow"));
exports.getMongodbEmployeeAccessGrant = null;
exports.getMongodbEmployeeAccessGrantOutput = null;
utilities.lazyLoad(exports, ["getMongodbEmployeeAccessGrant", "getMongodbEmployeeAccessGrantOutput"], () => require("./getMongodbEmployeeAccessGrant"));
exports.getNetworkContainer = null;
exports.getNetworkContainerOutput = null;
utilities.lazyLoad(exports, ["getNetworkContainer", "getNetworkContainerOutput"], () => require("./getNetworkContainer"));
exports.getNetworkContainers = null;
exports.getNetworkContainersOutput = null;
utilities.lazyLoad(exports, ["getNetworkContainers", "getNetworkContainersOutput"], () => require("./getNetworkContainers"));
exports.getNetworkPeering = null;
exports.getNetworkPeeringOutput = null;
utilities.lazyLoad(exports, ["getNetworkPeering", "getNetworkPeeringOutput"], () => require("./getNetworkPeering"));
exports.getNetworkPeerings = null;
exports.getNetworkPeeringsOutput = null;
utilities.lazyLoad(exports, ["getNetworkPeerings", "getNetworkPeeringsOutput"], () => require("./getNetworkPeerings"));
exports.getOnlineArchive = null;
exports.getOnlineArchiveOutput = null;
utilities.lazyLoad(exports, ["getOnlineArchive", "getOnlineArchiveOutput"], () => require("./getOnlineArchive"));
exports.getOnlineArchives = null;
exports.getOnlineArchivesOutput = null;
utilities.lazyLoad(exports, ["getOnlineArchives", "getOnlineArchivesOutput"], () => require("./getOnlineArchives"));
exports.getOrgInvitation = null;
exports.getOrgInvitationOutput = null;
utilities.lazyLoad(exports, ["getOrgInvitation", "getOrgInvitationOutput"], () => require("./getOrgInvitation"));
exports.getOrganization = null;
exports.getOrganizationOutput = null;
utilities.lazyLoad(exports, ["getOrganization", "getOrganizationOutput"], () => require("./getOrganization"));
exports.getOrganizations = null;
exports.getOrganizationsOutput = null;
utilities.lazyLoad(exports, ["getOrganizations", "getOrganizationsOutput"], () => require("./getOrganizations"));
exports.getPrivateEndpointRegionalMode = null;
exports.getPrivateEndpointRegionalModeOutput = null;
utilities.lazyLoad(exports, ["getPrivateEndpointRegionalMode", "getPrivateEndpointRegionalModeOutput"], () => require("./getPrivateEndpointRegionalMode"));
exports.getPrivateLinkEndpoint = null;
exports.getPrivateLinkEndpointOutput = null;
utilities.lazyLoad(exports, ["getPrivateLinkEndpoint", "getPrivateLinkEndpointOutput"], () => require("./getPrivateLinkEndpoint"));
exports.getPrivateLinkEndpointService = null;
exports.getPrivateLinkEndpointServiceOutput = null;
utilities.lazyLoad(exports, ["getPrivateLinkEndpointService", "getPrivateLinkEndpointServiceOutput"], () => require("./getPrivateLinkEndpointService"));
exports.getPrivatelinkEndpointServiceDataFederationOnlineArchive = null;
exports.getPrivatelinkEndpointServiceDataFederationOnlineArchiveOutput = null;
utilities.lazyLoad(exports, ["getPrivatelinkEndpointServiceDataFederationOnlineArchive", "getPrivatelinkEndpointServiceDataFederationOnlineArchiveOutput"], () => require("./getPrivatelinkEndpointServiceDataFederationOnlineArchive"));
exports.getPrivatelinkEndpointServiceDataFederationOnlineArchives = null;
exports.getPrivatelinkEndpointServiceDataFederationOnlineArchivesOutput = null;
utilities.lazyLoad(exports, ["getPrivatelinkEndpointServiceDataFederationOnlineArchives", "getPrivatelinkEndpointServiceDataFederationOnlineArchivesOutput"], () => require("./getPrivatelinkEndpointServiceDataFederationOnlineArchives"));
exports.getPrivatelinkEndpointServiceServerless = null;
exports.getPrivatelinkEndpointServiceServerlessOutput = null;
utilities.lazyLoad(exports, ["getPrivatelinkEndpointServiceServerless", "getPrivatelinkEndpointServiceServerlessOutput"], () => require("./getPrivatelinkEndpointServiceServerless"));
exports.getPrivatelinkEndpointsServiceServerless = null;
exports.getPrivatelinkEndpointsServiceServerlessOutput = null;
utilities.lazyLoad(exports, ["getPrivatelinkEndpointsServiceServerless", "getPrivatelinkEndpointsServiceServerlessOutput"], () => require("./getPrivatelinkEndpointsServiceServerless"));
exports.getProject = null;
exports.getProjectOutput = null;
utilities.lazyLoad(exports, ["getProject", "getProjectOutput"], () => require("./getProject"));
exports.getProjectApiKey = null;
exports.getProjectApiKeyOutput = null;
utilities.lazyLoad(exports, ["getProjectApiKey", "getProjectApiKeyOutput"], () => require("./getProjectApiKey"));
exports.getProjectApiKeys = null;
exports.getProjectApiKeysOutput = null;
utilities.lazyLoad(exports, ["getProjectApiKeys", "getProjectApiKeysOutput"], () => require("./getProjectApiKeys"));
exports.getProjectInvitation = null;
exports.getProjectInvitationOutput = null;
utilities.lazyLoad(exports, ["getProjectInvitation", "getProjectInvitationOutput"], () => require("./getProjectInvitation"));
exports.getProjectIpAccessList = null;
exports.getProjectIpAccessListOutput = null;
utilities.lazyLoad(exports, ["getProjectIpAccessList", "getProjectIpAccessListOutput"], () => require("./getProjectIpAccessList"));
exports.getProjectIpAddresses = null;
exports.getProjectIpAddressesOutput = null;
utilities.lazyLoad(exports, ["getProjectIpAddresses", "getProjectIpAddressesOutput"], () => require("./getProjectIpAddresses"));
exports.getProjects = null;
exports.getProjectsOutput = null;
utilities.lazyLoad(exports, ["getProjects", "getProjectsOutput"], () => require("./getProjects"));
exports.getPushBasedLogExport = null;
exports.getPushBasedLogExportOutput = null;
utilities.lazyLoad(exports, ["getPushBasedLogExport", "getPushBasedLogExportOutput"], () => require("./getPushBasedLogExport"));
exports.getResourcePolicies = null;
exports.getResourcePoliciesOutput = null;
utilities.lazyLoad(exports, ["getResourcePolicies", "getResourcePoliciesOutput"], () => require("./getResourcePolicies"));
exports.getResourcePolicy = null;
exports.getResourcePolicyOutput = null;
utilities.lazyLoad(exports, ["getResourcePolicy", "getResourcePolicyOutput"], () => require("./getResourcePolicy"));
exports.getRolesOrgId = null;
exports.getRolesOrgIdOutput = null;
utilities.lazyLoad(exports, ["getRolesOrgId", "getRolesOrgIdOutput"], () => require("./getRolesOrgId"));
exports.getSearchDeployment = null;
exports.getSearchDeploymentOutput = null;
utilities.lazyLoad(exports, ["getSearchDeployment", "getSearchDeploymentOutput"], () => require("./getSearchDeployment"));
exports.getSearchIndex = null;
exports.getSearchIndexOutput = null;
utilities.lazyLoad(exports, ["getSearchIndex", "getSearchIndexOutput"], () => require("./getSearchIndex"));
exports.getSearchIndexes = null;
exports.getSearchIndexesOutput = null;
utilities.lazyLoad(exports, ["getSearchIndexes", "getSearchIndexesOutput"], () => require("./getSearchIndexes"));
exports.getServerlessInstance = null;
exports.getServerlessInstanceOutput = null;
utilities.lazyLoad(exports, ["getServerlessInstance", "getServerlessInstanceOutput"], () => require("./getServerlessInstance"));
exports.getServerlessInstances = null;
exports.getServerlessInstancesOutput = null;
utilities.lazyLoad(exports, ["getServerlessInstances", "getServerlessInstancesOutput"], () => require("./getServerlessInstances"));
exports.getSharedTierRestoreJob = null;
exports.getSharedTierRestoreJobOutput = null;
utilities.lazyLoad(exports, ["getSharedTierRestoreJob", "getSharedTierRestoreJobOutput"], () => require("./getSharedTierRestoreJob"));
exports.getSharedTierRestoreJobs = null;
exports.getSharedTierRestoreJobsOutput = null;
utilities.lazyLoad(exports, ["getSharedTierRestoreJobs", "getSharedTierRestoreJobsOutput"], () => require("./getSharedTierRestoreJobs"));
exports.getSharedTierSnapshot = null;
exports.getSharedTierSnapshotOutput = null;
utilities.lazyLoad(exports, ["getSharedTierSnapshot", "getSharedTierSnapshotOutput"], () => require("./getSharedTierSnapshot"));
exports.getSharedTierSnapshots = null;
exports.getSharedTierSnapshotsOutput = null;
utilities.lazyLoad(exports, ["getSharedTierSnapshots", "getSharedTierSnapshotsOutput"], () => require("./getSharedTierSnapshots"));
exports.getStreamAccountDetails = null;
exports.getStreamAccountDetailsOutput = null;
utilities.lazyLoad(exports, ["getStreamAccountDetails", "getStreamAccountDetailsOutput"], () => require("./getStreamAccountDetails"));
exports.getStreamConnection = null;
exports.getStreamConnectionOutput = null;
utilities.lazyLoad(exports, ["getStreamConnection", "getStreamConnectionOutput"], () => require("./getStreamConnection"));
exports.getStreamConnections = null;
exports.getStreamConnectionsOutput = null;
utilities.lazyLoad(exports, ["getStreamConnections", "getStreamConnectionsOutput"], () => require("./getStreamConnections"));
exports.getStreamInstance = null;
exports.getStreamInstanceOutput = null;
utilities.lazyLoad(exports, ["getStreamInstance", "getStreamInstanceOutput"], () => require("./getStreamInstance"));
exports.getStreamInstances = null;
exports.getStreamInstancesOutput = null;
utilities.lazyLoad(exports, ["getStreamInstances", "getStreamInstancesOutput"], () => require("./getStreamInstances"));
exports.getStreamPrivatelinkEndpoint = null;
exports.getStreamPrivatelinkEndpointOutput = null;
utilities.lazyLoad(exports, ["getStreamPrivatelinkEndpoint", "getStreamPrivatelinkEndpointOutput"], () => require("./getStreamPrivatelinkEndpoint"));
exports.getStreamPrivatelinkEndpoints = null;
exports.getStreamPrivatelinkEndpointsOutput = null;
utilities.lazyLoad(exports, ["getStreamPrivatelinkEndpoints", "getStreamPrivatelinkEndpointsOutput"], () => require("./getStreamPrivatelinkEndpoints"));
exports.getStreamProcessor = null;
exports.getStreamProcessorOutput = null;
utilities.lazyLoad(exports, ["getStreamProcessor", "getStreamProcessorOutput"], () => require("./getStreamProcessor"));
exports.getStreamProcessors = null;
exports.getStreamProcessorsOutput = null;
utilities.lazyLoad(exports, ["getStreamProcessors", "getStreamProcessorsOutput"], () => require("./getStreamProcessors"));
exports.getTeam = null;
exports.getTeamOutput = null;
utilities.lazyLoad(exports, ["getTeam", "getTeamOutput"], () => require("./getTeam"));
exports.getTeams = null;
exports.getTeamsOutput = null;
utilities.lazyLoad(exports, ["getTeams", "getTeamsOutput"], () => require("./getTeams"));
exports.getThirdPartyIntegration = null;
exports.getThirdPartyIntegrationOutput = null;
utilities.lazyLoad(exports, ["getThirdPartyIntegration", "getThirdPartyIntegrationOutput"], () => require("./getThirdPartyIntegration"));
exports.getThirdPartyIntegrations = null;
exports.getThirdPartyIntegrationsOutput = null;
utilities.lazyLoad(exports, ["getThirdPartyIntegrations", "getThirdPartyIntegrationsOutput"], () => require("./getThirdPartyIntegrations"));
exports.getX509AuthenticationDatabaseUser = null;
exports.getX509AuthenticationDatabaseUserOutput = null;
utilities.lazyLoad(exports, ["getX509AuthenticationDatabaseUser", "getX509AuthenticationDatabaseUserOutput"], () => require("./getX509AuthenticationDatabaseUser"));
exports.GlobalClusterConfig = null;
utilities.lazyLoad(exports, ["GlobalClusterConfig"], () => require("./globalClusterConfig"));
exports.LdapConfiguration = null;
utilities.lazyLoad(exports, ["LdapConfiguration"], () => require("./ldapConfiguration"));
exports.LdapVerify = null;
utilities.lazyLoad(exports, ["LdapVerify"], () => require("./ldapVerify"));
exports.MaintenanceWindow = null;
utilities.lazyLoad(exports, ["MaintenanceWindow"], () => require("./maintenanceWindow"));
exports.MongodbEmployeeAccessGrant = null;
utilities.lazyLoad(exports, ["MongodbEmployeeAccessGrant"], () => require("./mongodbEmployeeAccessGrant"));
exports.NetworkContainer = null;
utilities.lazyLoad(exports, ["NetworkContainer"], () => require("./networkContainer"));
exports.NetworkPeering = null;
utilities.lazyLoad(exports, ["NetworkPeering"], () => require("./networkPeering"));
exports.OnlineArchive = null;
utilities.lazyLoad(exports, ["OnlineArchive"], () => require("./onlineArchive"));
exports.OrgInvitation = null;
utilities.lazyLoad(exports, ["OrgInvitation"], () => require("./orgInvitation"));
exports.Organization = null;
utilities.lazyLoad(exports, ["Organization"], () => require("./organization"));
exports.PrivateEndpointRegionalMode = null;
utilities.lazyLoad(exports, ["PrivateEndpointRegionalMode"], () => require("./privateEndpointRegionalMode"));
exports.PrivateLinkEndpoint = null;
utilities.lazyLoad(exports, ["PrivateLinkEndpoint"], () => require("./privateLinkEndpoint"));
exports.PrivateLinkEndpointService = null;
utilities.lazyLoad(exports, ["PrivateLinkEndpointService"], () => require("./privateLinkEndpointService"));
exports.PrivatelinkEndpointServerless = null;
utilities.lazyLoad(exports, ["PrivatelinkEndpointServerless"], () => require("./privatelinkEndpointServerless"));
exports.PrivatelinkEndpointServiceDataFederationOnlineArchive = null;
utilities.lazyLoad(exports, ["PrivatelinkEndpointServiceDataFederationOnlineArchive"], () => require("./privatelinkEndpointServiceDataFederationOnlineArchive"));
exports.PrivatelinkEndpointServiceServerless = null;
utilities.lazyLoad(exports, ["PrivatelinkEndpointServiceServerless"], () => require("./privatelinkEndpointServiceServerless"));
exports.Project = null;
utilities.lazyLoad(exports, ["Project"], () => require("./project"));
exports.ProjectApiKey = null;
utilities.lazyLoad(exports, ["ProjectApiKey"], () => require("./projectApiKey"));
exports.ProjectInvitation = null;
utilities.lazyLoad(exports, ["ProjectInvitation"], () => require("./projectInvitation"));
exports.ProjectIpAccessList = null;
utilities.lazyLoad(exports, ["ProjectIpAccessList"], () => require("./projectIpAccessList"));
__exportStar(require("./provider"), exports);
const provider_1 = require("./provider");
exports.PushBasedLogExport = null;
utilities.lazyLoad(exports, ["PushBasedLogExport"], () => require("./pushBasedLogExport"));
exports.ResourcePolicy = null;
utilities.lazyLoad(exports, ["ResourcePolicy"], () => require("./resourcePolicy"));
exports.SearchDeployment = null;
utilities.lazyLoad(exports, ["SearchDeployment"], () => require("./searchDeployment"));
exports.SearchIndex = null;
utilities.lazyLoad(exports, ["SearchIndex"], () => require("./searchIndex"));
exports.ServerlessInstance = null;
utilities.lazyLoad(exports, ["ServerlessInstance"], () => require("./serverlessInstance"));
exports.StreamConnection = null;
utilities.lazyLoad(exports, ["StreamConnection"], () => require("./streamConnection"));
exports.StreamInstance = null;
utilities.lazyLoad(exports, ["StreamInstance"], () => require("./streamInstance"));
exports.StreamPrivatelinkEndpoint = null;
utilities.lazyLoad(exports, ["StreamPrivatelinkEndpoint"], () => require("./streamPrivatelinkEndpoint"));
exports.StreamProcessor = null;
utilities.lazyLoad(exports, ["StreamProcessor"], () => require("./streamProcessor"));
exports.Team = null;
utilities.lazyLoad(exports, ["Team"], () => require("./team"));
exports.Teams = null;
utilities.lazyLoad(exports, ["Teams"], () => require("./teams"));
exports.ThirdPartyIntegration = null;
utilities.lazyLoad(exports, ["ThirdPartyIntegration"], () => require("./thirdPartyIntegration"));
exports.X509AuthenticationDatabaseUser = null;
utilities.lazyLoad(exports, ["X509AuthenticationDatabaseUser"], () => require("./x509authenticationDatabaseUser"));
// Export sub-modules:
const config = require("./config");
exports.config = config;
const types = require("./types");
exports.types = types;
const _module = {
    version: utilities.getVersion(),
    construct: (name, type, urn) => {
        switch (type) {
            case "mongodbatlas:index/accessListApiKey:AccessListApiKey":
                return new exports.AccessListApiKey(name, undefined, { urn });
            case "mongodbatlas:index/advancedCluster:AdvancedCluster":
                return new exports.AdvancedCluster(name, undefined, { urn });
            case "mongodbatlas:index/alertConfiguration:AlertConfiguration":
                return new exports.AlertConfiguration(name, undefined, { urn });
            case "mongodbatlas:index/apiKey:ApiKey":
                return new exports.ApiKey(name, undefined, { urn });
            case "mongodbatlas:index/apiKeyProjectAssignment:ApiKeyProjectAssignment":
                return new exports.ApiKeyProjectAssignment(name, undefined, { urn });
            case "mongodbatlas:index/auditing:Auditing":
                return new exports.Auditing(name, undefined, { urn });
            case "mongodbatlas:index/backupCompliancePolicy:BackupCompliancePolicy":
                return new exports.BackupCompliancePolicy(name, undefined, { urn });
            case "mongodbatlas:index/cloudBackupSchedule:CloudBackupSchedule":
                return new exports.CloudBackupSchedule(name, undefined, { urn });
            case "mongodbatlas:index/cloudBackupSnapshot:CloudBackupSnapshot":
                return new exports.CloudBackupSnapshot(name, undefined, { urn });
            case "mongodbatlas:index/cloudBackupSnapshotExportBucket:CloudBackupSnapshotExportBucket":
                return new exports.CloudBackupSnapshotExportBucket(name, undefined, { urn });
            case "mongodbatlas:index/cloudBackupSnapshotExportJob:CloudBackupSnapshotExportJob":
                return new exports.CloudBackupSnapshotExportJob(name, undefined, { urn });
            case "mongodbatlas:index/cloudBackupSnapshotRestoreJob:CloudBackupSnapshotRestoreJob":
                return new exports.CloudBackupSnapshotRestoreJob(name, undefined, { urn });
            case "mongodbatlas:index/cloudProviderAccessAuthorization:CloudProviderAccessAuthorization":
                return new exports.CloudProviderAccessAuthorization(name, undefined, { urn });
            case "mongodbatlas:index/cloudProviderAccessSetup:CloudProviderAccessSetup":
                return new exports.CloudProviderAccessSetup(name, undefined, { urn });
            case "mongodbatlas:index/cluster:Cluster":
                return new exports.Cluster(name, undefined, { urn });
            case "mongodbatlas:index/clusterOutageSimulation:ClusterOutageSimulation":
                return new exports.ClusterOutageSimulation(name, undefined, { urn });
            case "mongodbatlas:index/customDbRole:CustomDbRole":
                return new exports.CustomDbRole(name, undefined, { urn });
            case "mongodbatlas:index/customDnsConfigurationClusterAws:CustomDnsConfigurationClusterAws":
                return new exports.CustomDnsConfigurationClusterAws(name, undefined, { urn });
            case "mongodbatlas:index/dataLakePipeline:DataLakePipeline":
                return new exports.DataLakePipeline(name, undefined, { urn });
            case "mongodbatlas:index/databaseUser:DatabaseUser":
                return new exports.DatabaseUser(name, undefined, { urn });
            case "mongodbatlas:index/encryptionAtRest:EncryptionAtRest":
                return new exports.EncryptionAtRest(name, undefined, { urn });
            case "mongodbatlas:index/encryptionAtRestPrivateEndpoint:EncryptionAtRestPrivateEndpoint":
                return new exports.EncryptionAtRestPrivateEndpoint(name, undefined, { urn });
            case "mongodbatlas:index/eventTrigger:EventTrigger":
                return new exports.EventTrigger(name, undefined, { urn });
            case "mongodbatlas:index/federatedDatabaseInstance:FederatedDatabaseInstance":
                return new exports.FederatedDatabaseInstance(name, undefined, { urn });
            case "mongodbatlas:index/federatedQueryLimit:FederatedQueryLimit":
                return new exports.FederatedQueryLimit(name, undefined, { urn });
            case "mongodbatlas:index/federatedSettingsIdentityProvider:FederatedSettingsIdentityProvider":
                return new exports.FederatedSettingsIdentityProvider(name, undefined, { urn });
            case "mongodbatlas:index/federatedSettingsOrgConfig:FederatedSettingsOrgConfig":
                return new exports.FederatedSettingsOrgConfig(name, undefined, { urn });
            case "mongodbatlas:index/federatedSettingsOrgRoleMapping:FederatedSettingsOrgRoleMapping":
                return new exports.FederatedSettingsOrgRoleMapping(name, undefined, { urn });
            case "mongodbatlas:index/flexCluster:FlexCluster":
                return new exports.FlexCluster(name, undefined, { urn });
            case "mongodbatlas:index/globalClusterConfig:GlobalClusterConfig":
                return new exports.GlobalClusterConfig(name, undefined, { urn });
            case "mongodbatlas:index/ldapConfiguration:LdapConfiguration":
                return new exports.LdapConfiguration(name, undefined, { urn });
            case "mongodbatlas:index/ldapVerify:LdapVerify":
                return new exports.LdapVerify(name, undefined, { urn });
            case "mongodbatlas:index/maintenanceWindow:MaintenanceWindow":
                return new exports.MaintenanceWindow(name, undefined, { urn });
            case "mongodbatlas:index/mongodbEmployeeAccessGrant:MongodbEmployeeAccessGrant":
                return new exports.MongodbEmployeeAccessGrant(name, undefined, { urn });
            case "mongodbatlas:index/networkContainer:NetworkContainer":
                return new exports.NetworkContainer(name, undefined, { urn });
            case "mongodbatlas:index/networkPeering:NetworkPeering":
                return new exports.NetworkPeering(name, undefined, { urn });
            case "mongodbatlas:index/onlineArchive:OnlineArchive":
                return new exports.OnlineArchive(name, undefined, { urn });
            case "mongodbatlas:index/orgInvitation:OrgInvitation":
                return new exports.OrgInvitation(name, undefined, { urn });
            case "mongodbatlas:index/organization:Organization":
                return new exports.Organization(name, undefined, { urn });
            case "mongodbatlas:index/privateEndpointRegionalMode:PrivateEndpointRegionalMode":
                return new exports.PrivateEndpointRegionalMode(name, undefined, { urn });
            case "mongodbatlas:index/privateLinkEndpoint:PrivateLinkEndpoint":
                return new exports.PrivateLinkEndpoint(name, undefined, { urn });
            case "mongodbatlas:index/privateLinkEndpointService:PrivateLinkEndpointService":
                return new exports.PrivateLinkEndpointService(name, undefined, { urn });
            case "mongodbatlas:index/privatelinkEndpointServerless:PrivatelinkEndpointServerless":
                return new exports.PrivatelinkEndpointServerless(name, undefined, { urn });
            case "mongodbatlas:index/privatelinkEndpointServiceDataFederationOnlineArchive:PrivatelinkEndpointServiceDataFederationOnlineArchive":
                return new exports.PrivatelinkEndpointServiceDataFederationOnlineArchive(name, undefined, { urn });
            case "mongodbatlas:index/privatelinkEndpointServiceServerless:PrivatelinkEndpointServiceServerless":
                return new exports.PrivatelinkEndpointServiceServerless(name, undefined, { urn });
            case "mongodbatlas:index/project:Project":
                return new exports.Project(name, undefined, { urn });
            case "mongodbatlas:index/projectApiKey:ProjectApiKey":
                return new exports.ProjectApiKey(name, undefined, { urn });
            case "mongodbatlas:index/projectInvitation:ProjectInvitation":
                return new exports.ProjectInvitation(name, undefined, { urn });
            case "mongodbatlas:index/projectIpAccessList:ProjectIpAccessList":
                return new exports.ProjectIpAccessList(name, undefined, { urn });
            case "mongodbatlas:index/pushBasedLogExport:PushBasedLogExport":
                return new exports.PushBasedLogExport(name, undefined, { urn });
            case "mongodbatlas:index/resourcePolicy:ResourcePolicy":
                return new exports.ResourcePolicy(name, undefined, { urn });
            case "mongodbatlas:index/searchDeployment:SearchDeployment":
                return new exports.SearchDeployment(name, undefined, { urn });
            case "mongodbatlas:index/searchIndex:SearchIndex":
                return new exports.SearchIndex(name, undefined, { urn });
            case "mongodbatlas:index/serverlessInstance:ServerlessInstance":
                return new exports.ServerlessInstance(name, undefined, { urn });
            case "mongodbatlas:index/streamConnection:StreamConnection":
                return new exports.StreamConnection(name, undefined, { urn });
            case "mongodbatlas:index/streamInstance:StreamInstance":
                return new exports.StreamInstance(name, undefined, { urn });
            case "mongodbatlas:index/streamPrivatelinkEndpoint:StreamPrivatelinkEndpoint":
                return new exports.StreamPrivatelinkEndpoint(name, undefined, { urn });
            case "mongodbatlas:index/streamProcessor:StreamProcessor":
                return new exports.StreamProcessor(name, undefined, { urn });
            case "mongodbatlas:index/team:Team":
                return new exports.Team(name, undefined, { urn });
            case "mongodbatlas:index/teams:Teams":
                return new exports.Teams(name, undefined, { urn });
            case "mongodbatlas:index/thirdPartyIntegration:ThirdPartyIntegration":
                return new exports.ThirdPartyIntegration(name, undefined, { urn });
            case "mongodbatlas:index/x509AuthenticationDatabaseUser:X509AuthenticationDatabaseUser":
                return new exports.X509AuthenticationDatabaseUser(name, undefined, { urn });
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("mongodbatlas", "index/accessListApiKey", _module);
pulumi.runtime.registerResourceModule("mongodbatlas", "index/advancedCluster", _module);
pulumi.runtime.registerResourceModule("mongodbatlas", "index/alertConfiguration", _module);
pulumi.runtime.registerResourceModule("mongodbatlas", "index/apiKey", _module);
pulumi.runtime.registerResourceModule("mongodbatlas", "index/apiKeyProjectAssignment", _module);
pulumi.runtime.registerResourceModule("mongodbatlas", "index/auditing", _module);
pulumi.runtime.registerResourceModule("mongodbatlas", "index/backupCompliancePolicy", _module);
pulumi.runtime.registerResourceModule("mongodbatlas", "index/cloudBackupSchedule", _module);
pulumi.runtime.registerResourceModule("mongodbatlas", "index/cloudBackupSnapshot", _module);
pulumi.runtime.registerResourceModule("mongodbatlas", "index/cloudBackupSnapshotExportBucket", _module);
pulumi.runtime.registerResourceModule("mongodbatlas", "index/cloudBackupSnapshotExportJob", _module);
pulumi.runtime.registerResourceModule("mongodbatlas", "index/cloudBackupSnapshotRestoreJob", _module);
pulumi.runtime.registerResourceModule("mongodbatlas", "index/cloudProviderAccessAuthorization", _module);
pulumi.runtime.registerResourceModule("mongodbatlas", "index/cloudProviderAccessSetup", _module);
pulumi.runtime.registerResourceModule("mongodbatlas", "index/cluster", _module);
pulumi.runtime.registerResourceModule("mongodbatlas", "index/clusterOutageSimulation", _module);
pulumi.runtime.registerResourceModule("mongodbatlas", "index/customDbRole", _module);
pulumi.runtime.registerResourceModule("mongodbatlas", "index/customDnsConfigurationClusterAws", _module);
pulumi.runtime.registerResourceModule("mongodbatlas", "index/dataLakePipeline", _module);
pulumi.runtime.registerResourceModule("mongodbatlas", "index/databaseUser", _module);
pulumi.runtime.registerResourceModule("mongodbatlas", "index/encryptionAtRest", _module);
pulumi.runtime.registerResourceModule("mongodbatlas", "index/encryptionAtRestPrivateEndpoint", _module);
pulumi.runtime.registerResourceModule("mongodbatlas", "index/eventTrigger", _module);
pulumi.runtime.registerResourceModule("mongodbatlas", "index/federatedDatabaseInstance", _module);
pulumi.runtime.registerResourceModule("mongodbatlas", "index/federatedQueryLimit", _module);
pulumi.runtime.registerResourceModule("mongodbatlas", "index/federatedSettingsIdentityProvider", _module);
pulumi.runtime.registerResourceModule("mongodbatlas", "index/federatedSettingsOrgConfig", _module);
pulumi.runtime.registerResourceModule("mongodbatlas", "index/federatedSettingsOrgRoleMapping", _module);
pulumi.runtime.registerResourceModule("mongodbatlas", "index/flexCluster", _module);
pulumi.runtime.registerResourceModule("mongodbatlas", "index/globalClusterConfig", _module);
pulumi.runtime.registerResourceModule("mongodbatlas", "index/ldapConfiguration", _module);
pulumi.runtime.registerResourceModule("mongodbatlas", "index/ldapVerify", _module);
pulumi.runtime.registerResourceModule("mongodbatlas", "index/maintenanceWindow", _module);
pulumi.runtime.registerResourceModule("mongodbatlas", "index/mongodbEmployeeAccessGrant", _module);
pulumi.runtime.registerResourceModule("mongodbatlas", "index/networkContainer", _module);
pulumi.runtime.registerResourceModule("mongodbatlas", "index/networkPeering", _module);
pulumi.runtime.registerResourceModule("mongodbatlas", "index/onlineArchive", _module);
pulumi.runtime.registerResourceModule("mongodbatlas", "index/orgInvitation", _module);
pulumi.runtime.registerResourceModule("mongodbatlas", "index/organization", _module);
pulumi.runtime.registerResourceModule("mongodbatlas", "index/privateEndpointRegionalMode", _module);
pulumi.runtime.registerResourceModule("mongodbatlas", "index/privateLinkEndpoint", _module);
pulumi.runtime.registerResourceModule("mongodbatlas", "index/privateLinkEndpointService", _module);
pulumi.runtime.registerResourceModule("mongodbatlas", "index/privatelinkEndpointServerless", _module);
pulumi.runtime.registerResourceModule("mongodbatlas", "index/privatelinkEndpointServiceDataFederationOnlineArchive", _module);
pulumi.runtime.registerResourceModule("mongodbatlas", "index/privatelinkEndpointServiceServerless", _module);
pulumi.runtime.registerResourceModule("mongodbatlas", "index/project", _module);
pulumi.runtime.registerResourceModule("mongodbatlas", "index/projectApiKey", _module);
pulumi.runtime.registerResourceModule("mongodbatlas", "index/projectInvitation", _module);
pulumi.runtime.registerResourceModule("mongodbatlas", "index/projectIpAccessList", _module);
pulumi.runtime.registerResourceModule("mongodbatlas", "index/pushBasedLogExport", _module);
pulumi.runtime.registerResourceModule("mongodbatlas", "index/resourcePolicy", _module);
pulumi.runtime.registerResourceModule("mongodbatlas", "index/searchDeployment", _module);
pulumi.runtime.registerResourceModule("mongodbatlas", "index/searchIndex", _module);
pulumi.runtime.registerResourceModule("mongodbatlas", "index/serverlessInstance", _module);
pulumi.runtime.registerResourceModule("mongodbatlas", "index/streamConnection", _module);
pulumi.runtime.registerResourceModule("mongodbatlas", "index/streamInstance", _module);
pulumi.runtime.registerResourceModule("mongodbatlas", "index/streamPrivatelinkEndpoint", _module);
pulumi.runtime.registerResourceModule("mongodbatlas", "index/streamProcessor", _module);
pulumi.runtime.registerResourceModule("mongodbatlas", "index/team", _module);
pulumi.runtime.registerResourceModule("mongodbatlas", "index/teams", _module);
pulumi.runtime.registerResourceModule("mongodbatlas", "index/thirdPartyIntegration", _module);
pulumi.runtime.registerResourceModule("mongodbatlas", "index/x509AuthenticationDatabaseUser", _module);
pulumi.runtime.registerResourcePackage("mongodbatlas", {
    version: utilities.getVersion(),
    constructProvider: (name, type, urn) => {
        if (type !== "pulumi:providers:mongodbatlas") {
            throw new Error(`unknown provider type ${type}`);
        }
        return new provider_1.Provider(name, undefined, { urn });
    },
});
//# sourceMappingURL=index.js.map