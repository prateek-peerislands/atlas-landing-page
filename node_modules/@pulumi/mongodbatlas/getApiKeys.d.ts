import * as pulumi from "@pulumi/pulumi";
import * as outputs from "./types/output";
/**
 * ## Example Usage
 */
export declare function getApiKeys(args: GetApiKeysArgs, opts?: pulumi.InvokeOptions): Promise<GetApiKeysResult>;
/**
 * A collection of arguments for invoking getApiKeys.
 */
export interface GetApiKeysArgs {
    /**
     * Number of items to return per page, up to a maximum of 500. Defaults to `100`.
     */
    itemsPerPage?: number;
    /**
     * Unique identifier for the organization whose API keys you want to retrieve.
     */
    orgId: string;
    /**
     * The page to return. Defaults to `1`.
     */
    pageNum?: number;
}
/**
 * A collection of values returned by getApiKeys.
 */
export interface GetApiKeysResult {
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly itemsPerPage?: number;
    readonly orgId: string;
    readonly pageNum?: number;
    readonly results: outputs.GetApiKeysResult[];
}
/**
 * ## Example Usage
 */
export declare function getApiKeysOutput(args: GetApiKeysOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetApiKeysResult>;
/**
 * A collection of arguments for invoking getApiKeys.
 */
export interface GetApiKeysOutputArgs {
    /**
     * Number of items to return per page, up to a maximum of 500. Defaults to `100`.
     */
    itemsPerPage?: pulumi.Input<number>;
    /**
     * Unique identifier for the organization whose API keys you want to retrieve.
     */
    orgId: pulumi.Input<string>;
    /**
     * The page to return. Defaults to `1`.
     */
    pageNum?: pulumi.Input<number>;
}
