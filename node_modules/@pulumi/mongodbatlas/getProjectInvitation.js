"use strict";
// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.getProjectInvitationOutput = exports.getProjectInvitation = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("./utilities");
/**
 * ## # Data Source: mongodbatlas.ProjectInvitation
 *
 * `mongodbatlas.ProjectInvitation` describes an invitation to a user to join an Atlas project.
 *
 * > **NOTE:** Groups and projects are synonymous terms. You may find GROUP-ID in the official documentation.
 *
 * ## Example Usage
 *
 * ### S
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as mongodbatlas from "@pulumi/mongodbatlas";
 *
 * const testProjectInvitation = new mongodbatlas.ProjectInvitation("test", {
 *     username: "test-acc-username",
 *     projectId: "<PROJECT-ID>",
 *     roles: ["GROUP_DATA_ACCESS_READ_WRITE"],
 * });
 * const test = mongodbatlas.getProjectInvitationOutput({
 *     projectId: testProjectInvitation.projectId,
 *     username: testProjectInvitation.username,
 * });
 * ```
 */
function getProjectInvitation(args, opts) {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("mongodbatlas:index/getProjectInvitation:getProjectInvitation", {
        "invitationId": args.invitationId,
        "projectId": args.projectId,
        "username": args.username,
    }, opts);
}
exports.getProjectInvitation = getProjectInvitation;
/**
 * ## # Data Source: mongodbatlas.ProjectInvitation
 *
 * `mongodbatlas.ProjectInvitation` describes an invitation to a user to join an Atlas project.
 *
 * > **NOTE:** Groups and projects are synonymous terms. You may find GROUP-ID in the official documentation.
 *
 * ## Example Usage
 *
 * ### S
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as mongodbatlas from "@pulumi/mongodbatlas";
 *
 * const testProjectInvitation = new mongodbatlas.ProjectInvitation("test", {
 *     username: "test-acc-username",
 *     projectId: "<PROJECT-ID>",
 *     roles: ["GROUP_DATA_ACCESS_READ_WRITE"],
 * });
 * const test = mongodbatlas.getProjectInvitationOutput({
 *     projectId: testProjectInvitation.projectId,
 *     username: testProjectInvitation.username,
 * });
 * ```
 */
function getProjectInvitationOutput(args, opts) {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("mongodbatlas:index/getProjectInvitation:getProjectInvitation", {
        "invitationId": args.invitationId,
        "projectId": args.projectId,
        "username": args.username,
    }, opts);
}
exports.getProjectInvitationOutput = getProjectInvitationOutput;
//# sourceMappingURL=getProjectInvitation.js.map