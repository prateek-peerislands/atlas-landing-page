"use strict";
// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.getStreamInstancesOutput = exports.getStreamInstances = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("./utilities");
/**
 * ## # Data Source: mongodbatlas.getStreamInstances
 *
 * `mongodbatlas.getStreamInstances` describes the stream instances defined in a project.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as mongodbatlas from "@pulumi/mongodbatlas";
 *
 * const test = mongodbatlas.getStreamInstances({
 *     projectId: "<PROJECT_ID>",
 * });
 * ```
 */
function getStreamInstances(args, opts) {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("mongodbatlas:index/getStreamInstances:getStreamInstances", {
        "itemsPerPage": args.itemsPerPage,
        "pageNum": args.pageNum,
        "projectId": args.projectId,
    }, opts);
}
exports.getStreamInstances = getStreamInstances;
/**
 * ## # Data Source: mongodbatlas.getStreamInstances
 *
 * `mongodbatlas.getStreamInstances` describes the stream instances defined in a project.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as mongodbatlas from "@pulumi/mongodbatlas";
 *
 * const test = mongodbatlas.getStreamInstances({
 *     projectId: "<PROJECT_ID>",
 * });
 * ```
 */
function getStreamInstancesOutput(args, opts) {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("mongodbatlas:index/getStreamInstances:getStreamInstances", {
        "itemsPerPage": args.itemsPerPage,
        "pageNum": args.pageNum,
        "projectId": args.projectId,
    }, opts);
}
exports.getStreamInstancesOutput = getStreamInstancesOutput;
//# sourceMappingURL=getStreamInstances.js.map