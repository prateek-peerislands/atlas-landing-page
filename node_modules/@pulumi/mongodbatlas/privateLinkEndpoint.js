"use strict";
// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.PrivateLinkEndpoint = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("./utilities");
/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as mongodbatlas from "@pulumi/mongodbatlas";
 *
 * const test = new mongodbatlas.PrivateLinkEndpoint("test", {
 *     projectId: "<PROJECT-ID>",
 *     providerName: "AWS/AZURE",
 *     region: "US_EAST_1",
 * });
 * ```
 *
 * ### Available complete examples
 * - Setup private connection to a MongoDB Atlas Cluster with AWS VPC
 *
 * ## Import
 *
 * Private Endpoint Service can be imported using project ID, private link ID, provider name and region, in the format `{project_id}-{private_link_id}-{provider_name}-{region}`, e.g.
 *
 * ```sh
 * $ pulumi import mongodbatlas:index/privateLinkEndpoint:PrivateLinkEndpoint test 1112222b3bf99403840e8934-3242342343112-AWS-us-east-1
 * ```
 * See detailed information for arguments and attributes: [MongoDB API Private Endpoint Service](https://docs.atlas.mongodb.com/reference/api/private-endpoints-service-create-one/)
 */
class PrivateLinkEndpoint extends pulumi.CustomResource {
    /**
     * Get an existing PrivateLinkEndpoint resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, state, opts) {
        return new PrivateLinkEndpoint(name, state, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of PrivateLinkEndpoint.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === PrivateLinkEndpoint.__pulumiType;
    }
    constructor(name, argsOrState, opts) {
        let resourceInputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState;
            resourceInputs["endpointGroupNames"] = state ? state.endpointGroupNames : undefined;
            resourceInputs["endpointServiceName"] = state ? state.endpointServiceName : undefined;
            resourceInputs["errorMessage"] = state ? state.errorMessage : undefined;
            resourceInputs["interfaceEndpoints"] = state ? state.interfaceEndpoints : undefined;
            resourceInputs["privateEndpoints"] = state ? state.privateEndpoints : undefined;
            resourceInputs["privateLinkId"] = state ? state.privateLinkId : undefined;
            resourceInputs["privateLinkServiceName"] = state ? state.privateLinkServiceName : undefined;
            resourceInputs["privateLinkServiceResourceId"] = state ? state.privateLinkServiceResourceId : undefined;
            resourceInputs["projectId"] = state ? state.projectId : undefined;
            resourceInputs["providerName"] = state ? state.providerName : undefined;
            resourceInputs["region"] = state ? state.region : undefined;
            resourceInputs["regionName"] = state ? state.regionName : undefined;
            resourceInputs["serviceAttachmentNames"] = state ? state.serviceAttachmentNames : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
        }
        else {
            const args = argsOrState;
            if ((!args || args.projectId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'projectId'");
            }
            if ((!args || args.providerName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'providerName'");
            }
            if ((!args || args.region === undefined) && !opts.urn) {
                throw new Error("Missing required property 'region'");
            }
            resourceInputs["projectId"] = args ? args.projectId : undefined;
            resourceInputs["providerName"] = args ? args.providerName : undefined;
            resourceInputs["region"] = args ? args.region : undefined;
            resourceInputs["endpointGroupNames"] = undefined /*out*/;
            resourceInputs["endpointServiceName"] = undefined /*out*/;
            resourceInputs["errorMessage"] = undefined /*out*/;
            resourceInputs["interfaceEndpoints"] = undefined /*out*/;
            resourceInputs["privateEndpoints"] = undefined /*out*/;
            resourceInputs["privateLinkId"] = undefined /*out*/;
            resourceInputs["privateLinkServiceName"] = undefined /*out*/;
            resourceInputs["privateLinkServiceResourceId"] = undefined /*out*/;
            resourceInputs["regionName"] = undefined /*out*/;
            resourceInputs["serviceAttachmentNames"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(PrivateLinkEndpoint.__pulumiType, name, resourceInputs, opts);
    }
}
exports.PrivateLinkEndpoint = PrivateLinkEndpoint;
/** @internal */
PrivateLinkEndpoint.__pulumiType = 'mongodbatlas:index/privateLinkEndpoint:PrivateLinkEndpoint';
//# sourceMappingURL=privateLinkEndpoint.js.map