"use strict";
// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.getProjectApiKeysOutput = exports.getProjectApiKeys = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("./utilities");
/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as mongodbatlas from "@pulumi/mongodbatlas";
 *
 * const test = mongodbatlas.getProjectApiKeys({
 *     pageNum: 1,
 *     itemsPerPage: 5,
 *     projectId: "32b6e34b3d91647abb20e7b8",
 * });
 * ```
 */
function getProjectApiKeys(args, opts) {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("mongodbatlas:index/getProjectApiKeys:getProjectApiKeys", {
        "itemsPerPage": args.itemsPerPage,
        "pageNum": args.pageNum,
        "projectId": args.projectId,
    }, opts);
}
exports.getProjectApiKeys = getProjectApiKeys;
/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as mongodbatlas from "@pulumi/mongodbatlas";
 *
 * const test = mongodbatlas.getProjectApiKeys({
 *     pageNum: 1,
 *     itemsPerPage: 5,
 *     projectId: "32b6e34b3d91647abb20e7b8",
 * });
 * ```
 */
function getProjectApiKeysOutput(args, opts) {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("mongodbatlas:index/getProjectApiKeys:getProjectApiKeys", {
        "itemsPerPage": args.itemsPerPage,
        "pageNum": args.pageNum,
        "projectId": args.projectId,
    }, opts);
}
exports.getProjectApiKeysOutput = getProjectApiKeysOutput;
//# sourceMappingURL=getProjectApiKeys.js.map