"use strict";
// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.getPrivatelinkEndpointServiceDataFederationOnlineArchiveOutput = exports.getPrivatelinkEndpointServiceDataFederationOnlineArchive = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("./utilities");
/**
 * ## # Data Source: mongodbatlas.PrivatelinkEndpointServiceDataFederationOnlineArchive
 *
 * `mongodbatlas.PrivatelinkEndpointServiceDataFederationOnlineArchive` describes a Private Endpoint Service resource for Data Federation and Online Archive.
 *
 * > **NOTE:** Groups and projects are synonymous terms. You may find `groupId` in the official documentation.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as mongodbatlas from "@pulumi/mongodbatlas";
 *
 * const atlas_project = new mongodbatlas.Project("atlas-project", {
 *     orgId: atlasOrgId,
 *     name: atlasProjectName,
 * });
 * const test = new mongodbatlas.PrivatelinkEndpointServiceDataFederationOnlineArchive("test", {
 *     projectId: atlas_project.id,
 *     endpointId: "vpce-046cf43c79424d4c9",
 *     providerName: "AWS",
 *     comment: "Test",
 *     region: "US_EAST_1",
 *     customerEndpointDnsName: "vpce-046cf43c79424d4c9-nmls2y9k.vpce-svc-0824460b72e1a420e.us-east-1.vpce.amazonaws.com",
 * });
 * const testDataSource = mongodbatlas.getPrivatelinkEndpointServiceDataFederationOnlineArchiveOutput({
 *     projectId: atlas_project.id,
 *     endpointId: test.endpointId,
 * });
 * ```
 */
function getPrivatelinkEndpointServiceDataFederationOnlineArchive(args, opts) {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("mongodbatlas:index/getPrivatelinkEndpointServiceDataFederationOnlineArchive:getPrivatelinkEndpointServiceDataFederationOnlineArchive", {
        "endpointId": args.endpointId,
        "projectId": args.projectId,
    }, opts);
}
exports.getPrivatelinkEndpointServiceDataFederationOnlineArchive = getPrivatelinkEndpointServiceDataFederationOnlineArchive;
/**
 * ## # Data Source: mongodbatlas.PrivatelinkEndpointServiceDataFederationOnlineArchive
 *
 * `mongodbatlas.PrivatelinkEndpointServiceDataFederationOnlineArchive` describes a Private Endpoint Service resource for Data Federation and Online Archive.
 *
 * > **NOTE:** Groups and projects are synonymous terms. You may find `groupId` in the official documentation.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as mongodbatlas from "@pulumi/mongodbatlas";
 *
 * const atlas_project = new mongodbatlas.Project("atlas-project", {
 *     orgId: atlasOrgId,
 *     name: atlasProjectName,
 * });
 * const test = new mongodbatlas.PrivatelinkEndpointServiceDataFederationOnlineArchive("test", {
 *     projectId: atlas_project.id,
 *     endpointId: "vpce-046cf43c79424d4c9",
 *     providerName: "AWS",
 *     comment: "Test",
 *     region: "US_EAST_1",
 *     customerEndpointDnsName: "vpce-046cf43c79424d4c9-nmls2y9k.vpce-svc-0824460b72e1a420e.us-east-1.vpce.amazonaws.com",
 * });
 * const testDataSource = mongodbatlas.getPrivatelinkEndpointServiceDataFederationOnlineArchiveOutput({
 *     projectId: atlas_project.id,
 *     endpointId: test.endpointId,
 * });
 * ```
 */
function getPrivatelinkEndpointServiceDataFederationOnlineArchiveOutput(args, opts) {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("mongodbatlas:index/getPrivatelinkEndpointServiceDataFederationOnlineArchive:getPrivatelinkEndpointServiceDataFederationOnlineArchive", {
        "endpointId": args.endpointId,
        "projectId": args.projectId,
    }, opts);
}
exports.getPrivatelinkEndpointServiceDataFederationOnlineArchiveOutput = getPrivatelinkEndpointServiceDataFederationOnlineArchiveOutput;
//# sourceMappingURL=getPrivatelinkEndpointServiceDataFederationOnlineArchive.js.map