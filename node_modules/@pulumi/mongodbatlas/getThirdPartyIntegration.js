"use strict";
// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.getThirdPartyIntegrationOutput = exports.getThirdPartyIntegration = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("./utilities");
/**
 * ## # Data Source: mongodbatlas.ThirdPartyIntegration
 *
 * `mongodbatlas.ThirdPartyIntegration` describes a Third-Party Integration Settings for the given type.
 *
 * > **NOTE:** Groups and projects are synonymous terms. You may find `groupId` in the official documentation.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as mongodbatlas from "@pulumi/mongodbatlas";
 *
 * const testDatadog = new mongodbatlas.ThirdPartyIntegration("test_datadog", {
 *     projectId: "<PROJECT-ID>",
 *     type: "DATADOG",
 *     apiKey: "<API-KEY>",
 *     region: "<REGION>",
 * });
 * const test = mongodbatlas.getThirdPartyIntegrationOutput({
 *     projectId: testDatadog.projectId,
 *     type: "DATADOG",
 * });
 * ```
 */
function getThirdPartyIntegration(args, opts) {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("mongodbatlas:index/getThirdPartyIntegration:getThirdPartyIntegration", {
        "projectId": args.projectId,
        "type": args.type,
    }, opts);
}
exports.getThirdPartyIntegration = getThirdPartyIntegration;
/**
 * ## # Data Source: mongodbatlas.ThirdPartyIntegration
 *
 * `mongodbatlas.ThirdPartyIntegration` describes a Third-Party Integration Settings for the given type.
 *
 * > **NOTE:** Groups and projects are synonymous terms. You may find `groupId` in the official documentation.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as mongodbatlas from "@pulumi/mongodbatlas";
 *
 * const testDatadog = new mongodbatlas.ThirdPartyIntegration("test_datadog", {
 *     projectId: "<PROJECT-ID>",
 *     type: "DATADOG",
 *     apiKey: "<API-KEY>",
 *     region: "<REGION>",
 * });
 * const test = mongodbatlas.getThirdPartyIntegrationOutput({
 *     projectId: testDatadog.projectId,
 *     type: "DATADOG",
 * });
 * ```
 */
function getThirdPartyIntegrationOutput(args, opts) {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("mongodbatlas:index/getThirdPartyIntegration:getThirdPartyIntegration", {
        "projectId": args.projectId,
        "type": args.type,
    }, opts);
}
exports.getThirdPartyIntegrationOutput = getThirdPartyIntegrationOutput;
//# sourceMappingURL=getThirdPartyIntegration.js.map