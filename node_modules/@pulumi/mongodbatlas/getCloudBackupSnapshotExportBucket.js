"use strict";
// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.getCloudBackupSnapshotExportBucketOutput = exports.getCloudBackupSnapshotExportBucket = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("./utilities");
/**
 * ## # Data Source: mongodbatlas.CloudBackupSnapshotExportBucket
 *
 * `mongodbatlas.CloudBackupSnapshotExportBucket` datasource allows you to retrieve all the buckets for the specified project.
 *
 * > **NOTE:** Groups and projects are synonymous terms. You may find `groupId` in the official documentation.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as mongodbatlas from "@pulumi/mongodbatlas";
 *
 * const testCloudBackupSnapshotExportBucket = new mongodbatlas.CloudBackupSnapshotExportBucket("test", {
 *     projectId: "{PROJECT_ID}",
 *     iamRoleId: "{IAM_ROLE_ID}",
 *     bucketName: "example-bucket",
 *     cloudProvider: "AWS",
 * });
 * const test = mongodbatlas.getCloudBackupSnapshotExportBucketOutput({
 *     projectId: "{PROJECT_ID}",
 *     exportBucketId: testCloudBackupSnapshotExportBucket.exportBucketId,
 * });
 * ```
 */
function getCloudBackupSnapshotExportBucket(args, opts) {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("mongodbatlas:index/getCloudBackupSnapshotExportBucket:getCloudBackupSnapshotExportBucket", {
        "exportBucketId": args.exportBucketId,
        "projectId": args.projectId,
    }, opts);
}
exports.getCloudBackupSnapshotExportBucket = getCloudBackupSnapshotExportBucket;
/**
 * ## # Data Source: mongodbatlas.CloudBackupSnapshotExportBucket
 *
 * `mongodbatlas.CloudBackupSnapshotExportBucket` datasource allows you to retrieve all the buckets for the specified project.
 *
 * > **NOTE:** Groups and projects are synonymous terms. You may find `groupId` in the official documentation.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as mongodbatlas from "@pulumi/mongodbatlas";
 *
 * const testCloudBackupSnapshotExportBucket = new mongodbatlas.CloudBackupSnapshotExportBucket("test", {
 *     projectId: "{PROJECT_ID}",
 *     iamRoleId: "{IAM_ROLE_ID}",
 *     bucketName: "example-bucket",
 *     cloudProvider: "AWS",
 * });
 * const test = mongodbatlas.getCloudBackupSnapshotExportBucketOutput({
 *     projectId: "{PROJECT_ID}",
 *     exportBucketId: testCloudBackupSnapshotExportBucket.exportBucketId,
 * });
 * ```
 */
function getCloudBackupSnapshotExportBucketOutput(args, opts) {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("mongodbatlas:index/getCloudBackupSnapshotExportBucket:getCloudBackupSnapshotExportBucket", {
        "exportBucketId": args.exportBucketId,
        "projectId": args.projectId,
    }, opts);
}
exports.getCloudBackupSnapshotExportBucketOutput = getCloudBackupSnapshotExportBucketOutput;
//# sourceMappingURL=getCloudBackupSnapshotExportBucket.js.map