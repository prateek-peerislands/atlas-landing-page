import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
/**
 * ## # Resource: mongodbatlas.ResourcePolicy
 *
 * `mongodbatlas.ResourcePolicy` provides a Resource Policy resource. The resource lets you create, edit and delete resource policies to prevent misconfigurations and reduce the need for corrective interventions in your organization.
 *
 * ## Example Usage
 *
 * ## Import
 *
 * Resource Policy resource can be imported using the org ID and policy ID, in the format `{ORG_ID}-{POLICY_ID}`, e.g.
 *
 * For more information see: [MongoDB Atlas API - Resource Policies](https://www.mongodb.com/docs/api/doc/atlas-admin-api-v2/group/endpoint-resource-policies) Documentation.
 */
export declare class ResourcePolicy extends pulumi.CustomResource {
    /**
     * Get an existing ResourcePolicy resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ResourcePolicyState, opts?: pulumi.CustomResourceOptions): ResourcePolicy;
    /**
     * Returns true if the given object is an instance of ResourcePolicy.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is ResourcePolicy;
    /**
     * The user that last updated the Atlas resource policy.
     */
    readonly createdByUser: pulumi.Output<outputs.ResourcePolicyCreatedByUser>;
    /**
     * Date and time in UTC when the Atlas resource policy was created.
     */
    readonly createdDate: pulumi.Output<string>;
    /**
     * Description of the Atlas resource policy.
     */
    readonly description: pulumi.Output<string | undefined>;
    /**
     * The user that last updated the Atlas resource policy.
     */
    readonly lastUpdatedByUser: pulumi.Output<outputs.ResourcePolicyLastUpdatedByUser>;
    /**
     * Date and time in UTC when the Atlas resource policy was last updated.
     */
    readonly lastUpdatedDate: pulumi.Output<string>;
    /**
     * Human-readable label that describes the Atlas resource policy.
     */
    readonly name: pulumi.Output<string>;
    /**
     * Unique 24-hexadecimal digit string that identifies the organization that contains your projects. Use the /orgs endpoint to retrieve all organizations to which the authenticated user has access.
     */
    readonly orgId: pulumi.Output<string>;
    /**
     * List of policies that make up the Atlas resource policy.
     */
    readonly policies: pulumi.Output<outputs.ResourcePolicyPolicy[]>;
    /**
     * A string that identifies the version of the Atlas resource policy.
     */
    readonly version: pulumi.Output<string>;
    /**
     * Create a ResourcePolicy resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ResourcePolicyArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering ResourcePolicy resources.
 */
export interface ResourcePolicyState {
    /**
     * The user that last updated the Atlas resource policy.
     */
    createdByUser?: pulumi.Input<inputs.ResourcePolicyCreatedByUser>;
    /**
     * Date and time in UTC when the Atlas resource policy was created.
     */
    createdDate?: pulumi.Input<string>;
    /**
     * Description of the Atlas resource policy.
     */
    description?: pulumi.Input<string>;
    /**
     * The user that last updated the Atlas resource policy.
     */
    lastUpdatedByUser?: pulumi.Input<inputs.ResourcePolicyLastUpdatedByUser>;
    /**
     * Date and time in UTC when the Atlas resource policy was last updated.
     */
    lastUpdatedDate?: pulumi.Input<string>;
    /**
     * Human-readable label that describes the Atlas resource policy.
     */
    name?: pulumi.Input<string>;
    /**
     * Unique 24-hexadecimal digit string that identifies the organization that contains your projects. Use the /orgs endpoint to retrieve all organizations to which the authenticated user has access.
     */
    orgId?: pulumi.Input<string>;
    /**
     * List of policies that make up the Atlas resource policy.
     */
    policies?: pulumi.Input<pulumi.Input<inputs.ResourcePolicyPolicy>[]>;
    /**
     * A string that identifies the version of the Atlas resource policy.
     */
    version?: pulumi.Input<string>;
}
/**
 * The set of arguments for constructing a ResourcePolicy resource.
 */
export interface ResourcePolicyArgs {
    /**
     * Description of the Atlas resource policy.
     */
    description?: pulumi.Input<string>;
    /**
     * Human-readable label that describes the Atlas resource policy.
     */
    name?: pulumi.Input<string>;
    /**
     * Unique 24-hexadecimal digit string that identifies the organization that contains your projects. Use the /orgs endpoint to retrieve all organizations to which the authenticated user has access.
     */
    orgId: pulumi.Input<string>;
    /**
     * List of policies that make up the Atlas resource policy.
     */
    policies: pulumi.Input<pulumi.Input<inputs.ResourcePolicyPolicy>[]>;
}
