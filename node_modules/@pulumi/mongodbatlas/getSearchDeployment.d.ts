import * as pulumi from "@pulumi/pulumi";
import * as outputs from "./types/output";
/**
 * ## # Data Source: mongodbatlas.SearchDeployment
 *
 * `mongodbatlas.SearchDeployment` describes a search node deployment.
 *
 * ## Example Usage
 */
export declare function getSearchDeployment(args: GetSearchDeploymentArgs, opts?: pulumi.InvokeOptions): Promise<GetSearchDeploymentResult>;
/**
 * A collection of arguments for invoking getSearchDeployment.
 */
export interface GetSearchDeploymentArgs {
    /**
     * Label that identifies the cluster to return the search nodes for.
     */
    clusterName: string;
    /**
     * Unique 24-hexadecimal digit string that identifies your project.
     */
    projectId: string;
}
/**
 * A collection of values returned by getSearchDeployment.
 */
export interface GetSearchDeploymentResult {
    /**
     * Label that identifies the cluster to return the search nodes for.
     */
    readonly clusterName: string;
    /**
     * Cloud service provider that manages your customer keys to provide an additional layer of Encryption At Rest for the cluster.
     */
    readonly encryptionAtRestProvider: string;
    /**
     * Unique 24-hexadecimal digit string that identifies the search deployment.
     */
    readonly id: string;
    /**
     * Unique 24-hexadecimal digit string that identifies your project.
     */
    readonly projectId: string;
    /**
     * List of settings that configure the search nodes for your cluster. This list is currently limited to defining a single element.
     */
    readonly specs: outputs.GetSearchDeploymentSpec[];
    /**
     * Human-readable label that indicates the current operating condition of this search deployment.
     */
    readonly stateName: string;
}
/**
 * ## # Data Source: mongodbatlas.SearchDeployment
 *
 * `mongodbatlas.SearchDeployment` describes a search node deployment.
 *
 * ## Example Usage
 */
export declare function getSearchDeploymentOutput(args: GetSearchDeploymentOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetSearchDeploymentResult>;
/**
 * A collection of arguments for invoking getSearchDeployment.
 */
export interface GetSearchDeploymentOutputArgs {
    /**
     * Label that identifies the cluster to return the search nodes for.
     */
    clusterName: pulumi.Input<string>;
    /**
     * Unique 24-hexadecimal digit string that identifies your project.
     */
    projectId: pulumi.Input<string>;
}
