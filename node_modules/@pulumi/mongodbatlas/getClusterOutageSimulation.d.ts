import * as pulumi from "@pulumi/pulumi";
import * as outputs from "./types/output";
/**
 * ## Example Usage
 *
 * ### S
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as mongodbatlas from "@pulumi/mongodbatlas";
 *
 * const outageSimulation = mongodbatlas.getClusterOutageSimulation({
 *     projectId: "64707f06c519c20c3a2b1b03",
 *     clusterName: "Cluster0",
 * });
 * ```
 */
export declare function getClusterOutageSimulation(args: GetClusterOutageSimulationArgs, opts?: pulumi.InvokeOptions): Promise<GetClusterOutageSimulationResult>;
/**
 * A collection of arguments for invoking getClusterOutageSimulation.
 */
export interface GetClusterOutageSimulationArgs {
    /**
     * Name of the Atlas Cluster that is undergoing outage simulation.
     */
    clusterName: string;
    /**
     * The unique ID for the project that contains the cluster that is undergoing outage simulation.
     */
    projectId: string;
}
/**
 * A collection of values returned by getClusterOutageSimulation.
 */
export interface GetClusterOutageSimulationResult {
    readonly clusterName: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * List of settings that specify the type of cluster outage simulation.
     */
    readonly outageFilters: outputs.GetClusterOutageSimulationOutageFilter[];
    readonly projectId: string;
    /**
     * Unique 24-hexadecimal character string that identifies the outage simulation.
     */
    readonly simulationId: string;
    /**
     * Date and time when MongoDB Cloud started the regional outage simulation.
     */
    readonly startRequestDate: string;
    /**
     * Current phase of the outage simulation:
     * * `START_REQUESTED` - User has requested cluster outage simulation.
     * * `STARTING` - MongoDB Cloud is starting cluster outage simulation.
     * * `SIMULATING` - MongoDB Cloud is simulating cluster outage.
     * * `RECOVERY_REQUESTED` - User has requested recovery from the simulated outage.
     * * `RECOVERING` - MongoDB Cloud is recovering the cluster from the simulated outage.
     * * `COMPLETE` - MongoDB Cloud has completed the cluster outage simulation.
     */
    readonly state: string;
}
/**
 * ## Example Usage
 *
 * ### S
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as mongodbatlas from "@pulumi/mongodbatlas";
 *
 * const outageSimulation = mongodbatlas.getClusterOutageSimulation({
 *     projectId: "64707f06c519c20c3a2b1b03",
 *     clusterName: "Cluster0",
 * });
 * ```
 */
export declare function getClusterOutageSimulationOutput(args: GetClusterOutageSimulationOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetClusterOutageSimulationResult>;
/**
 * A collection of arguments for invoking getClusterOutageSimulation.
 */
export interface GetClusterOutageSimulationOutputArgs {
    /**
     * Name of the Atlas Cluster that is undergoing outage simulation.
     */
    clusterName: pulumi.Input<string>;
    /**
     * The unique ID for the project that contains the cluster that is undergoing outage simulation.
     */
    projectId: pulumi.Input<string>;
}
