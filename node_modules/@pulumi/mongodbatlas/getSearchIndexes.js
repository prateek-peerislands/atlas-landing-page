"use strict";
// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.getSearchIndexesOutput = exports.getSearchIndexes = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("./utilities");
/**
 * ## # Data Source: mongodbatlas.getSearchIndexes
 *
 * `mongodbatlas.getSearchIndexes` describes all search indexes. This represents search indexes that have been created.
 *
 * > **NOTE:** Groups and projects are synonymous terms. You may find `groupId` in the official documentation.
 */
function getSearchIndexes(args, opts) {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("mongodbatlas:index/getSearchIndexes:getSearchIndexes", {
        "clusterName": args.clusterName,
        "collectionName": args.collectionName,
        "database": args.database,
        "projectId": args.projectId,
    }, opts);
}
exports.getSearchIndexes = getSearchIndexes;
/**
 * ## # Data Source: mongodbatlas.getSearchIndexes
 *
 * `mongodbatlas.getSearchIndexes` describes all search indexes. This represents search indexes that have been created.
 *
 * > **NOTE:** Groups and projects are synonymous terms. You may find `groupId` in the official documentation.
 */
function getSearchIndexesOutput(args, opts) {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("mongodbatlas:index/getSearchIndexes:getSearchIndexes", {
        "clusterName": args.clusterName,
        "collectionName": args.collectionName,
        "database": args.database,
        "projectId": args.projectId,
    }, opts);
}
exports.getSearchIndexesOutput = getSearchIndexesOutput;
//# sourceMappingURL=getSearchIndexes.js.map