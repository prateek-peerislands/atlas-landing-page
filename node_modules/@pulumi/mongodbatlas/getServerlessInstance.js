"use strict";
// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.getServerlessInstanceOutput = exports.getServerlessInstance = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("./utilities");
/**
 * **WARNING:** This data source is deprecated and will be removed in January 2026. For more details, see Migration Guide: Transition out of Serverless Instances and Shared-tier clusters.
 *
 * `mongodbatlas.ServerlessInstance` describes a single serverless instance. This represents a single serverless instance that have been created.
 * > **NOTE:**  Serverless instances do not support some Atlas features at this time.
 * For a full list of unsupported features, see [Serverless Instance Limitations](https://docs.atlas.mongodb.com/reference/serverless-instance-limitations/).
 *
 * > **NOTE:** Groups and projects are synonymous terms. You may find `groupId` in the official documentation.
 *
 * ## Example Usage
 *
 * ### Basic
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as mongodbatlas from "@pulumi/mongodbatlas";
 *
 * const testTwo = mongodbatlas.getServerlessInstance({
 *     name: "<SERVERLESS_INSTANCE_NAME>",
 *     projectId: "<PROJECT_ID >",
 * });
 * ```
 *
 * **NOTE:**  `mongodbatlas.ServerlessInstance` and `mongodbatlas.PrivatelinkEndpointServiceServerless` resources have a circular dependency in some respects.\
 * That is, the `serverlessInstance` must exist before the `privatelinkEndpointService` can be created,\
 * and the `privatelinkEndpointService` must exist before the `serverlessInstance` gets its respective `connectionStringsPrivateEndpointSrv` values.
 *
 * Because of this, the `serverlessInstance` data source has particular value as a source of the `connectionStringsPrivateEndpointSrv`.\
 * When using the dataSource in-tandem with the afforementioned resources, we can create and retrieve the `connectionStringsPrivateEndpointSrv` in a single `pulumi up`.
 *
 * Follow this example to setup private connection to a serverless instance using aws vpc and get the connection strings in a single `pulumi up`
 */
function getServerlessInstance(args, opts) {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("mongodbatlas:index/getServerlessInstance:getServerlessInstance", {
        "autoIndexing": args.autoIndexing,
        "continuousBackupEnabled": args.continuousBackupEnabled,
        "links": args.links,
        "name": args.name,
        "projectId": args.projectId,
        "stateName": args.stateName,
    }, opts);
}
exports.getServerlessInstance = getServerlessInstance;
/**
 * **WARNING:** This data source is deprecated and will be removed in January 2026. For more details, see Migration Guide: Transition out of Serverless Instances and Shared-tier clusters.
 *
 * `mongodbatlas.ServerlessInstance` describes a single serverless instance. This represents a single serverless instance that have been created.
 * > **NOTE:**  Serverless instances do not support some Atlas features at this time.
 * For a full list of unsupported features, see [Serverless Instance Limitations](https://docs.atlas.mongodb.com/reference/serverless-instance-limitations/).
 *
 * > **NOTE:** Groups and projects are synonymous terms. You may find `groupId` in the official documentation.
 *
 * ## Example Usage
 *
 * ### Basic
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as mongodbatlas from "@pulumi/mongodbatlas";
 *
 * const testTwo = mongodbatlas.getServerlessInstance({
 *     name: "<SERVERLESS_INSTANCE_NAME>",
 *     projectId: "<PROJECT_ID >",
 * });
 * ```
 *
 * **NOTE:**  `mongodbatlas.ServerlessInstance` and `mongodbatlas.PrivatelinkEndpointServiceServerless` resources have a circular dependency in some respects.\
 * That is, the `serverlessInstance` must exist before the `privatelinkEndpointService` can be created,\
 * and the `privatelinkEndpointService` must exist before the `serverlessInstance` gets its respective `connectionStringsPrivateEndpointSrv` values.
 *
 * Because of this, the `serverlessInstance` data source has particular value as a source of the `connectionStringsPrivateEndpointSrv`.\
 * When using the dataSource in-tandem with the afforementioned resources, we can create and retrieve the `connectionStringsPrivateEndpointSrv` in a single `pulumi up`.
 *
 * Follow this example to setup private connection to a serverless instance using aws vpc and get the connection strings in a single `pulumi up`
 */
function getServerlessInstanceOutput(args, opts) {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("mongodbatlas:index/getServerlessInstance:getServerlessInstance", {
        "autoIndexing": args.autoIndexing,
        "continuousBackupEnabled": args.continuousBackupEnabled,
        "links": args.links,
        "name": args.name,
        "projectId": args.projectId,
        "stateName": args.stateName,
    }, opts);
}
exports.getServerlessInstanceOutput = getServerlessInstanceOutput;
//# sourceMappingURL=getServerlessInstance.js.map