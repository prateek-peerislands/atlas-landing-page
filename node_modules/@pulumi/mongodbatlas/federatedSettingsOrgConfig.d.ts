import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
/**
 * ## # Resource: mongodbatlas.FederatedSettingsOrgConfig
 *
 * `mongodbatlas.FederatedSettingsOrgConfig` provides an Federated Settings Identity Providers datasource. Atlas Cloud Federated Settings Identity Providers provides federated settings outputs for the configured Identity Providers.
 *
 * ## Example Usage
 *
 * > **IMPORTANT** You **MUST** import this resource before you can manage it with this provider.
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as mongodbatlas from "@pulumi/mongodbatlas";
 *
 * const orgConnection = new mongodbatlas.FederatedSettingsOrgConfig("org_connection", {
 *     federationSettingsId: "627a9687f7f7f7f774de306f14",
 *     orgId: "627a9683ea7ff7f74de306f14",
 *     dataAccessIdentityProviderIds: ["64d613677e1ad50839cce4db"],
 *     domainRestrictionEnabled: false,
 *     domainAllowLists: ["mydomain.com"],
 *     postAuthRoleGrants: ["ORG_MEMBER"],
 *     identityProviderId: "0oaqyt9fc2ySTWnA0357",
 * });
 * const orgConfigsDs = mongodbatlas.getFederatedSettingsOrgConfigs({
 *     federationSettingsId: orgConnectionMongodbatlasFederatedSettingsOrgConfig.id,
 * });
 * ```
 *
 * ## Import
 *
 * FederatedSettingsOrgConfig must be imported using federation_settings_id-org_id, e.g.
 *
 * ```sh
 * $ pulumi import mongodbatlas:index/federatedSettingsOrgConfig:FederatedSettingsOrgConfig org_connection 627a9687f7f7f7f774de306f14-627a9683ea7ff7f74de306f14
 * ```
 * For more information see: [MongoDB Atlas API Reference.](https://www.mongodb.com/docs/atlas/reference/api/federation-configuration/)
 */
export declare class FederatedSettingsOrgConfig extends pulumi.CustomResource {
    /**
     * Get an existing FederatedSettingsOrgConfig resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: FederatedSettingsOrgConfigState, opts?: pulumi.CustomResourceOptions): FederatedSettingsOrgConfig;
    /**
     * Returns true if the given object is an instance of FederatedSettingsOrgConfig.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is FederatedSettingsOrgConfig;
    /**
     * The collection of unique ids representing the identity providers that can be used for data access in this organization.
     */
    readonly dataAccessIdentityProviderIds: pulumi.Output<string[] | undefined>;
    /**
     * List that contains the approved domains from which organization users can log in.
     */
    readonly domainAllowLists: pulumi.Output<string[] | undefined>;
    /**
     * Flag that indicates whether domain restriction is enabled for the connected organization.
     */
    readonly domainRestrictionEnabled: pulumi.Output<boolean>;
    /**
     * Unique 24-hexadecimal digit string that identifies the federated authentication configuration.
     */
    readonly federationSettingsId: pulumi.Output<string>;
    /**
     * Legacy 20-hexadecimal digit string that identifies the SAML access identity provider that this connected org config is associated with. Removing the attribute or providing the value `""` will detach/remove the SAML identity provider. This id can be found in two ways:
     * 1. Within the Federation Management UI in Atlas in the Identity Providers tab by clicking the info icon in the IdP ID row of a configured SAML identity provider
     * 2. `oktaIdpId` on the `mongodbatlas.FederatedSettingsIdentityProvider` resource
     */
    readonly identityProviderId: pulumi.Output<string | undefined>;
    /**
     * Unique 24-hexadecimal digit string that identifies the organization that contains your projects.
     */
    readonly orgId: pulumi.Output<string>;
    /**
     * List that contains the default [roles](https://www.mongodb.com/docs/atlas/reference/user-roles/#std-label-organization-roles) granted to users who authenticate through the IdP in a connected organization.
     */
    readonly postAuthRoleGrants: pulumi.Output<string[] | undefined>;
    /**
     * List that contains the users who have an email address that doesn't match any domain on the allowed list. See below
     */
    readonly userConflicts: pulumi.Output<outputs.FederatedSettingsOrgConfigUserConflict[]>;
    /**
     * Create a FederatedSettingsOrgConfig resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: FederatedSettingsOrgConfigArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering FederatedSettingsOrgConfig resources.
 */
export interface FederatedSettingsOrgConfigState {
    /**
     * The collection of unique ids representing the identity providers that can be used for data access in this organization.
     */
    dataAccessIdentityProviderIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List that contains the approved domains from which organization users can log in.
     */
    domainAllowLists?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Flag that indicates whether domain restriction is enabled for the connected organization.
     */
    domainRestrictionEnabled?: pulumi.Input<boolean>;
    /**
     * Unique 24-hexadecimal digit string that identifies the federated authentication configuration.
     */
    federationSettingsId?: pulumi.Input<string>;
    /**
     * Legacy 20-hexadecimal digit string that identifies the SAML access identity provider that this connected org config is associated with. Removing the attribute or providing the value `""` will detach/remove the SAML identity provider. This id can be found in two ways:
     * 1. Within the Federation Management UI in Atlas in the Identity Providers tab by clicking the info icon in the IdP ID row of a configured SAML identity provider
     * 2. `oktaIdpId` on the `mongodbatlas.FederatedSettingsIdentityProvider` resource
     */
    identityProviderId?: pulumi.Input<string>;
    /**
     * Unique 24-hexadecimal digit string that identifies the organization that contains your projects.
     */
    orgId?: pulumi.Input<string>;
    /**
     * List that contains the default [roles](https://www.mongodb.com/docs/atlas/reference/user-roles/#std-label-organization-roles) granted to users who authenticate through the IdP in a connected organization.
     */
    postAuthRoleGrants?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List that contains the users who have an email address that doesn't match any domain on the allowed list. See below
     */
    userConflicts?: pulumi.Input<pulumi.Input<inputs.FederatedSettingsOrgConfigUserConflict>[]>;
}
/**
 * The set of arguments for constructing a FederatedSettingsOrgConfig resource.
 */
export interface FederatedSettingsOrgConfigArgs {
    /**
     * The collection of unique ids representing the identity providers that can be used for data access in this organization.
     */
    dataAccessIdentityProviderIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List that contains the approved domains from which organization users can log in.
     */
    domainAllowLists?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Flag that indicates whether domain restriction is enabled for the connected organization.
     */
    domainRestrictionEnabled: pulumi.Input<boolean>;
    /**
     * Unique 24-hexadecimal digit string that identifies the federated authentication configuration.
     */
    federationSettingsId: pulumi.Input<string>;
    /**
     * Legacy 20-hexadecimal digit string that identifies the SAML access identity provider that this connected org config is associated with. Removing the attribute or providing the value `""` will detach/remove the SAML identity provider. This id can be found in two ways:
     * 1. Within the Federation Management UI in Atlas in the Identity Providers tab by clicking the info icon in the IdP ID row of a configured SAML identity provider
     * 2. `oktaIdpId` on the `mongodbatlas.FederatedSettingsIdentityProvider` resource
     */
    identityProviderId?: pulumi.Input<string>;
    /**
     * Unique 24-hexadecimal digit string that identifies the organization that contains your projects.
     */
    orgId: pulumi.Input<string>;
    /**
     * List that contains the default [roles](https://www.mongodb.com/docs/atlas/reference/user-roles/#std-label-organization-roles) granted to users who authenticate through the IdP in a connected organization.
     */
    postAuthRoleGrants?: pulumi.Input<pulumi.Input<string>[]>;
}
