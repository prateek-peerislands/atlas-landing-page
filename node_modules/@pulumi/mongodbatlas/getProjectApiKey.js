"use strict";
// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.getProjectApiKeyOutput = exports.getProjectApiKey = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("./utilities");
/**
 * ## Example Usage
 *
 * ### Using projectId and apiKeyId attribute to query
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as mongodbatlas from "@pulumi/mongodbatlas";
 *
 * const testProjectApiKey = new mongodbatlas.ProjectApiKey("test", {
 *     description: "Description of your API key",
 *     projectAssignments: [{
 *         projectId: "64259ee860c43338194b0f8e",
 *         roleNames: ["GROUP_READ_ONLY"],
 *     }],
 * });
 * const test = mongodbatlas.getProjectApiKey({
 *     projectId: "64259ee860c43338194b0f8e",
 *     apiKeyId: testMongodbatlasApiKey.apiKeyId,
 * });
 * ```
 */
function getProjectApiKey(args, opts) {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("mongodbatlas:index/getProjectApiKey:getProjectApiKey", {
        "apiKeyId": args.apiKeyId,
        "projectId": args.projectId,
    }, opts);
}
exports.getProjectApiKey = getProjectApiKey;
/**
 * ## Example Usage
 *
 * ### Using projectId and apiKeyId attribute to query
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as mongodbatlas from "@pulumi/mongodbatlas";
 *
 * const testProjectApiKey = new mongodbatlas.ProjectApiKey("test", {
 *     description: "Description of your API key",
 *     projectAssignments: [{
 *         projectId: "64259ee860c43338194b0f8e",
 *         roleNames: ["GROUP_READ_ONLY"],
 *     }],
 * });
 * const test = mongodbatlas.getProjectApiKey({
 *     projectId: "64259ee860c43338194b0f8e",
 *     apiKeyId: testMongodbatlasApiKey.apiKeyId,
 * });
 * ```
 */
function getProjectApiKeyOutput(args, opts) {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("mongodbatlas:index/getProjectApiKey:getProjectApiKey", {
        "apiKeyId": args.apiKeyId,
        "projectId": args.projectId,
    }, opts);
}
exports.getProjectApiKeyOutput = getProjectApiKeyOutput;
//# sourceMappingURL=getProjectApiKey.js.map