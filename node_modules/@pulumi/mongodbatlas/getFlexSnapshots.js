"use strict";
// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.getFlexSnapshotsOutput = exports.getFlexSnapshots = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("./utilities");
/**
 * ## # Data Source: mongodbatlas.getFlexSnapshots
 *
 * `mongodbatlas.getFlexSnapshots` returns all snapshots of a flex cluster.
 *
 * ## Example Usage
 *
 * ### S
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as mongodbatlas from "@pulumi/mongodbatlas";
 *
 * const snapshot = mongodbatlas.getFlexSnapshot({
 *     projectId: projectId,
 *     name: example_cluster.name,
 *     snapshotId: snapshotId,
 * });
 * const snapshots = mongodbatlas.getFlexSnapshots({
 *     projectId: projectId,
 *     name: example_cluster.name,
 * });
 * export const mongodbatlasFlexSnapshot = snapshot.then(snapshot => snapshot.name);
 * export const mongodbatlasFlexSnapshots = snapshots.then(snapshots => .map(snapshot => (snapshot.snapshotId)));
 * ```
 */
function getFlexSnapshots(args, opts) {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("mongodbatlas:index/getFlexSnapshots:getFlexSnapshots", {
        "name": args.name,
        "projectId": args.projectId,
    }, opts);
}
exports.getFlexSnapshots = getFlexSnapshots;
/**
 * ## # Data Source: mongodbatlas.getFlexSnapshots
 *
 * `mongodbatlas.getFlexSnapshots` returns all snapshots of a flex cluster.
 *
 * ## Example Usage
 *
 * ### S
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as mongodbatlas from "@pulumi/mongodbatlas";
 *
 * const snapshot = mongodbatlas.getFlexSnapshot({
 *     projectId: projectId,
 *     name: example_cluster.name,
 *     snapshotId: snapshotId,
 * });
 * const snapshots = mongodbatlas.getFlexSnapshots({
 *     projectId: projectId,
 *     name: example_cluster.name,
 * });
 * export const mongodbatlasFlexSnapshot = snapshot.then(snapshot => snapshot.name);
 * export const mongodbatlasFlexSnapshots = snapshots.then(snapshots => .map(snapshot => (snapshot.snapshotId)));
 * ```
 */
function getFlexSnapshotsOutput(args, opts) {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("mongodbatlas:index/getFlexSnapshots:getFlexSnapshots", {
        "name": args.name,
        "projectId": args.projectId,
    }, opts);
}
exports.getFlexSnapshotsOutput = getFlexSnapshotsOutput;
//# sourceMappingURL=getFlexSnapshots.js.map