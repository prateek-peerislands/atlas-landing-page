import * as pulumi from "@pulumi/pulumi";
import * as outputs from "./types/output";
/**
 * ## # Data Source: mongodbatlas.ResourcePolicy
 *
 * `mongodbatlas.ResourcePolicy` describes a resource policy in an organization.
 *
 * ## Example Usage
 */
export declare function getResourcePolicy(args: GetResourcePolicyArgs, opts?: pulumi.InvokeOptions): Promise<GetResourcePolicyResult>;
/**
 * A collection of arguments for invoking getResourcePolicy.
 */
export interface GetResourcePolicyArgs {
    /**
     * Unique 24-hexadecimal digit string that identifies an Atlas resource policy.
     */
    id: string;
    /**
     * Unique 24-hexadecimal digit string that identifies the organization that contains your projects. Use the /orgs endpoint to retrieve all organizations to which the authenticated user has access.
     */
    orgId: string;
}
/**
 * A collection of values returned by getResourcePolicy.
 */
export interface GetResourcePolicyResult {
    /**
     * The user that last updated the Atlas resource policy.
     */
    readonly createdByUser: outputs.GetResourcePolicyCreatedByUser;
    /**
     * Date and time in UTC when the Atlas resource policy was created.
     */
    readonly createdDate: string;
    /**
     * Description of the Atlas resource policy.
     */
    readonly description: string;
    /**
     * Unique 24-hexadecimal digit string that identifies an Atlas resource policy.
     */
    readonly id: string;
    /**
     * The user that last updated the Atlas resource policy.
     */
    readonly lastUpdatedByUser: outputs.GetResourcePolicyLastUpdatedByUser;
    /**
     * Date and time in UTC when the Atlas resource policy was last updated.
     */
    readonly lastUpdatedDate: string;
    /**
     * Human-readable label that describes the Atlas resource policy.
     */
    readonly name: string;
    /**
     * Unique 24-hexadecimal digit string that identifies the organization that contains your projects. Use the /orgs endpoint to retrieve all organizations to which the authenticated user has access.
     */
    readonly orgId: string;
    /**
     * List of policies that make up the Atlas resource policy.
     */
    readonly policies: outputs.GetResourcePolicyPolicy[];
    /**
     * A string that identifies the version of the Atlas resource policy.
     */
    readonly version: string;
}
/**
 * ## # Data Source: mongodbatlas.ResourcePolicy
 *
 * `mongodbatlas.ResourcePolicy` describes a resource policy in an organization.
 *
 * ## Example Usage
 */
export declare function getResourcePolicyOutput(args: GetResourcePolicyOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetResourcePolicyResult>;
/**
 * A collection of arguments for invoking getResourcePolicy.
 */
export interface GetResourcePolicyOutputArgs {
    /**
     * Unique 24-hexadecimal digit string that identifies an Atlas resource policy.
     */
    id: pulumi.Input<string>;
    /**
     * Unique 24-hexadecimal digit string that identifies the organization that contains your projects. Use the /orgs endpoint to retrieve all organizations to which the authenticated user has access.
     */
    orgId: pulumi.Input<string>;
}
