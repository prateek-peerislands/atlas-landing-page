import * as pulumi from "@pulumi/pulumi";
import * as outputs from "./types/output";
/**
 * ## # Data Source: mongodbatlas.getFederatedQueryLimits
 *
 * `mongodbatlas.getFederatedQueryLimits` provides a Federated Database Instance Query Limits data source. To learn more about Atlas Data Federation see https://www.mongodb.com/docs/atlas/data-federation/overview/.
 *
 * > **NOTE:** Groups and projects are synonymous terms. You may find groupId in the official documentation.
 *
 * ## Example Usage
 *
 * ### S
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as mongodbatlas from "@pulumi/mongodbatlas";
 *
 * const test = mongodbatlas.getFederatedQueryLimits({
 *     projectId: "PROJECT_ID",
 *     tenantName: "FEDERATED_DATABASE_INSTANCE_NAME",
 * });
 * ```
 */
export declare function getFederatedQueryLimits(args: GetFederatedQueryLimitsArgs, opts?: pulumi.InvokeOptions): Promise<GetFederatedQueryLimitsResult>;
/**
 * A collection of arguments for invoking getFederatedQueryLimits.
 */
export interface GetFederatedQueryLimitsArgs {
    /**
     * The unique ID for the project to create a Federated Database Instance.
     */
    projectId: string;
    /**
     * Name of the Atlas Federated Database Instance.
     */
    tenantName: string;
}
/**
 * A collection of values returned by getFederatedQueryLimits.
 */
export interface GetFederatedQueryLimitsResult {
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly projectId: string;
    /**
     * Includes Federated Database instance query limits for each item detailed in the results array section.
     */
    readonly results: outputs.GetFederatedQueryLimitsResult[];
    readonly tenantName: string;
}
/**
 * ## # Data Source: mongodbatlas.getFederatedQueryLimits
 *
 * `mongodbatlas.getFederatedQueryLimits` provides a Federated Database Instance Query Limits data source. To learn more about Atlas Data Federation see https://www.mongodb.com/docs/atlas/data-federation/overview/.
 *
 * > **NOTE:** Groups and projects are synonymous terms. You may find groupId in the official documentation.
 *
 * ## Example Usage
 *
 * ### S
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as mongodbatlas from "@pulumi/mongodbatlas";
 *
 * const test = mongodbatlas.getFederatedQueryLimits({
 *     projectId: "PROJECT_ID",
 *     tenantName: "FEDERATED_DATABASE_INSTANCE_NAME",
 * });
 * ```
 */
export declare function getFederatedQueryLimitsOutput(args: GetFederatedQueryLimitsOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetFederatedQueryLimitsResult>;
/**
 * A collection of arguments for invoking getFederatedQueryLimits.
 */
export interface GetFederatedQueryLimitsOutputArgs {
    /**
     * The unique ID for the project to create a Federated Database Instance.
     */
    projectId: pulumi.Input<string>;
    /**
     * Name of the Atlas Federated Database Instance.
     */
    tenantName: pulumi.Input<string>;
}
