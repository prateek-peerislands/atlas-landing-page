"use strict";
// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.getPrivateLinkEndpointOutput = exports.getPrivateLinkEndpoint = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("./utilities");
/**
 * ## # Data Source: mongodbatlas.PrivateLinkEndpoint
 *
 * `mongodbatlas.PrivateLinkEndpoint` describes a Private Endpoint. This represents a Private Endpoint Connection to retrieve details regarding a private endpoint by id in an Atlas project
 *
 * > **NOTE:** Groups and projects are synonymous terms. You may find groupId in the official documentation.
 *
 * > **IMPORTANT:** Before configuring a private endpoint for a new region in your cluster,
 * ensure that you review the [Multi-Region Private Endpoints](https://www.mongodb.com/docs/atlas/troubleshoot-private-endpoints/#multi-region-private-endpoints) troubleshooting documentation.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as mongodbatlas from "@pulumi/mongodbatlas";
 *
 * const testPrivateLinkEndpoint = new mongodbatlas.PrivateLinkEndpoint("test", {
 *     projectId: "<PROJECT-ID>",
 *     providerName: "AWS",
 *     region: "US_EAST_1",
 * });
 * const test = mongodbatlas.getPrivateLinkEndpointOutput({
 *     projectId: testPrivateLinkEndpoint.projectId,
 *     privateLinkId: testPrivateLinkEndpoint.privateLinkId,
 *     providerName: "AWS",
 * });
 * ```
 *
 * ### Available complete examples
 * - Setup private connection to a MongoDB Atlas Cluster with AWS VPC
 */
function getPrivateLinkEndpoint(args, opts) {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("mongodbatlas:index/getPrivateLinkEndpoint:getPrivateLinkEndpoint", {
        "privateLinkId": args.privateLinkId,
        "projectId": args.projectId,
        "providerName": args.providerName,
    }, opts);
}
exports.getPrivateLinkEndpoint = getPrivateLinkEndpoint;
/**
 * ## # Data Source: mongodbatlas.PrivateLinkEndpoint
 *
 * `mongodbatlas.PrivateLinkEndpoint` describes a Private Endpoint. This represents a Private Endpoint Connection to retrieve details regarding a private endpoint by id in an Atlas project
 *
 * > **NOTE:** Groups and projects are synonymous terms. You may find groupId in the official documentation.
 *
 * > **IMPORTANT:** Before configuring a private endpoint for a new region in your cluster,
 * ensure that you review the [Multi-Region Private Endpoints](https://www.mongodb.com/docs/atlas/troubleshoot-private-endpoints/#multi-region-private-endpoints) troubleshooting documentation.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as mongodbatlas from "@pulumi/mongodbatlas";
 *
 * const testPrivateLinkEndpoint = new mongodbatlas.PrivateLinkEndpoint("test", {
 *     projectId: "<PROJECT-ID>",
 *     providerName: "AWS",
 *     region: "US_EAST_1",
 * });
 * const test = mongodbatlas.getPrivateLinkEndpointOutput({
 *     projectId: testPrivateLinkEndpoint.projectId,
 *     privateLinkId: testPrivateLinkEndpoint.privateLinkId,
 *     providerName: "AWS",
 * });
 * ```
 *
 * ### Available complete examples
 * - Setup private connection to a MongoDB Atlas Cluster with AWS VPC
 */
function getPrivateLinkEndpointOutput(args, opts) {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("mongodbatlas:index/getPrivateLinkEndpoint:getPrivateLinkEndpoint", {
        "privateLinkId": args.privateLinkId,
        "projectId": args.projectId,
        "providerName": args.providerName,
    }, opts);
}
exports.getPrivateLinkEndpointOutput = getPrivateLinkEndpointOutput;
//# sourceMappingURL=getPrivateLinkEndpoint.js.map