"use strict";
// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.getMongodbEmployeeAccessGrantOutput = exports.getMongodbEmployeeAccessGrant = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("./utilities");
/**
 * ## # Data Source: mongodbatlas.MongodbEmployeeAccessGrant
 *
 * `mongodbatlas.MongodbEmployeeAccessGrant` describes a MongoDB employee access grant.
 *
 * ## Example Usage
 *
 * ### S
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as mongodbatlas from "@pulumi/mongodbatlas";
 *
 * const example = new mongodbatlas.MongodbEmployeeAccessGrant("example", {
 *     projectId: projectId,
 *     clusterName: clusterName,
 *     grantType: "CLUSTER_INFRASTRUCTURE_AND_APP_SERVICES_SYNC_DATA",
 *     expirationTime: "2025-01-01T12:00:00Z",
 * });
 * const dsExample = mongodbatlas.getMongodbEmployeeAccessGrant({
 *     projectId: projectId,
 *     clusterName: clusterName,
 * });
 * export const grantType = dsExample.then(dsExample => dsExample.grantType);
 * export const expirationTime = dsExample.then(dsExample => dsExample.expirationTime);
 * ```
 */
function getMongodbEmployeeAccessGrant(args, opts) {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("mongodbatlas:index/getMongodbEmployeeAccessGrant:getMongodbEmployeeAccessGrant", {
        "clusterName": args.clusterName,
        "projectId": args.projectId,
    }, opts);
}
exports.getMongodbEmployeeAccessGrant = getMongodbEmployeeAccessGrant;
/**
 * ## # Data Source: mongodbatlas.MongodbEmployeeAccessGrant
 *
 * `mongodbatlas.MongodbEmployeeAccessGrant` describes a MongoDB employee access grant.
 *
 * ## Example Usage
 *
 * ### S
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as mongodbatlas from "@pulumi/mongodbatlas";
 *
 * const example = new mongodbatlas.MongodbEmployeeAccessGrant("example", {
 *     projectId: projectId,
 *     clusterName: clusterName,
 *     grantType: "CLUSTER_INFRASTRUCTURE_AND_APP_SERVICES_SYNC_DATA",
 *     expirationTime: "2025-01-01T12:00:00Z",
 * });
 * const dsExample = mongodbatlas.getMongodbEmployeeAccessGrant({
 *     projectId: projectId,
 *     clusterName: clusterName,
 * });
 * export const grantType = dsExample.then(dsExample => dsExample.grantType);
 * export const expirationTime = dsExample.then(dsExample => dsExample.expirationTime);
 * ```
 */
function getMongodbEmployeeAccessGrantOutput(args, opts) {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("mongodbatlas:index/getMongodbEmployeeAccessGrant:getMongodbEmployeeAccessGrant", {
        "clusterName": args.clusterName,
        "projectId": args.projectId,
    }, opts);
}
exports.getMongodbEmployeeAccessGrantOutput = getMongodbEmployeeAccessGrantOutput;
//# sourceMappingURL=getMongodbEmployeeAccessGrant.js.map