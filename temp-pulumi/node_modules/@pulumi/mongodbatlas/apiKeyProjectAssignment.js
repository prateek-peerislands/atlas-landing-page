"use strict";
// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.ApiKeyProjectAssignment = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("./utilities");
/**
 * ## # Resource: mongodbatlas.ApiKeyProjectAssignment
 *
 * `mongodbatlas.ApiKeyProjectAssignment` provides an API Key Project Assignment resource. The resource lets you create, edit, and delete Organization API keys assignments to projects.
 *
 * ## Example Usage
 *
 * ### S
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as mongodbatlas from "@pulumi/mongodbatlas";
 *
 * const _this = new mongodbatlas.ApiKey("this", {
 *     orgId: orgId,
 *     description: "Test API Key",
 *     roleNames: ["ORG_READ_ONLY"],
 * });
 * const firstProject = new mongodbatlas.Project("first_project", {
 *     name: "First Project",
 *     orgId: orgId,
 * });
 * const secondProject = new mongodbatlas.Project("second_project", {
 *     name: "Second Project",
 *     orgId: orgId,
 * });
 * const firstAssignment = new mongodbatlas.ApiKeyProjectAssignment("first_assignment", {
 *     projectId: firstProject.id,
 *     apiKeyId: _this.apiKeyId,
 *     roles: ["GROUP_OWNER"],
 * });
 * const secondAssignment = new mongodbatlas.ApiKeyProjectAssignment("second_assignment", {
 *     projectId: secondProject.id,
 *     apiKeyId: _this.apiKeyId,
 *     roles: ["GROUP_OWNER"],
 * });
 * // Add IP Access List Entry to Programmatic API Key
 * const thisAccessListApiKey = new mongodbatlas.AccessListApiKey("this", {
 *     orgId: orgId,
 *     cidrBlock: "0.0.0.0/1",
 *     apiKeyId: _this.apiKeyId,
 * });
 * ```
 *
 * ## Import
 *
 * API Key Project Assignment resource can be imported using the project ID and API key ID, in the format `{PROJECT_ID}/{API_KEY_ID}`, e.g.
 *
 * For more information see: [MongoDB Atlas API - Programmatic API Keys Project Assignment](https://www.mongodb.com/docs/api/doc/atlas-admin-api-v2/group/endpoint-programmatic-api-keys) Documentation.
 */
class ApiKeyProjectAssignment extends pulumi.CustomResource {
    /**
     * Get an existing ApiKeyProjectAssignment resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, state, opts) {
        return new ApiKeyProjectAssignment(name, state, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of ApiKeyProjectAssignment.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ApiKeyProjectAssignment.__pulumiType;
    }
    constructor(name, argsOrState, opts) {
        let resourceInputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState;
            resourceInputs["apiKeyId"] = state ? state.apiKeyId : undefined;
            resourceInputs["projectId"] = state ? state.projectId : undefined;
            resourceInputs["roles"] = state ? state.roles : undefined;
        }
        else {
            const args = argsOrState;
            if ((!args || args.apiKeyId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'apiKeyId'");
            }
            if ((!args || args.projectId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'projectId'");
            }
            if ((!args || args.roles === undefined) && !opts.urn) {
                throw new Error("Missing required property 'roles'");
            }
            resourceInputs["apiKeyId"] = args ? args.apiKeyId : undefined;
            resourceInputs["projectId"] = args ? args.projectId : undefined;
            resourceInputs["roles"] = args ? args.roles : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ApiKeyProjectAssignment.__pulumiType, name, resourceInputs, opts);
    }
}
exports.ApiKeyProjectAssignment = ApiKeyProjectAssignment;
/** @internal */
ApiKeyProjectAssignment.__pulumiType = 'mongodbatlas:index/apiKeyProjectAssignment:ApiKeyProjectAssignment';
//# sourceMappingURL=apiKeyProjectAssignment.js.map