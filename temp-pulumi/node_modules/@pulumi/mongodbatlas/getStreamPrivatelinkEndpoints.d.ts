import * as pulumi from "@pulumi/pulumi";
import * as outputs from "./types/output";
/**
 * ## # Data Source: mongodbatlas.getStreamPrivatelinkEndpoints
 *
 * `mongodbatlas.getStreamPrivatelinkEndpoints` describes a Privatelink Endpoint for Streams.
 *
 * ## Example Usage
 *
 * ### S
 *
 * ### AWS S3 Privatelink
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 * import * as mongodbatlas from "@pulumi/mongodbatlas";
 *
 * // S3 bucket for stream data
 * const streamBucket = new aws.index.S3Bucket("stream_bucket", {
 *     bucket: s3BucketName,
 *     forceDestroy: true,
 * });
 * const streamBucketVersioning = new aws.index.S3BucketVersioning("stream_bucket_versioning", {
 *     bucket: streamBucket.id,
 *     versioningConfiguration: [{
 *         status: "Enabled",
 *     }],
 * });
 * const streamBucketEncryption = new aws.index.S3BucketServerSideEncryptionConfiguration("stream_bucket_encryption", {
 *     bucket: streamBucket.id,
 *     rule: [{
 *         applyServerSideEncryptionByDefault: [{
 *             sseAlgorithm: "AES256",
 *         }],
 *     }],
 * });
 * // PrivateLink for S3
 * const _this = new mongodbatlas.StreamPrivatelinkEndpoint("this", {
 *     projectId: projectId,
 *     providerName: "AWS",
 *     vendor: "S3",
 *     region: region,
 *     serviceEndpointId: serviceEndpointId,
 * });
 * export const privatelinkEndpointId = _this.id;
 * ```
 */
export declare function getStreamPrivatelinkEndpoints(args: GetStreamPrivatelinkEndpointsArgs, opts?: pulumi.InvokeOptions): Promise<GetStreamPrivatelinkEndpointsResult>;
/**
 * A collection of arguments for invoking getStreamPrivatelinkEndpoints.
 */
export interface GetStreamPrivatelinkEndpointsArgs {
    projectId: string;
}
/**
 * A collection of values returned by getStreamPrivatelinkEndpoints.
 */
export interface GetStreamPrivatelinkEndpointsResult {
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly projectId: string;
    readonly results: outputs.GetStreamPrivatelinkEndpointsResult[];
}
/**
 * ## # Data Source: mongodbatlas.getStreamPrivatelinkEndpoints
 *
 * `mongodbatlas.getStreamPrivatelinkEndpoints` describes a Privatelink Endpoint for Streams.
 *
 * ## Example Usage
 *
 * ### S
 *
 * ### AWS S3 Privatelink
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 * import * as mongodbatlas from "@pulumi/mongodbatlas";
 *
 * // S3 bucket for stream data
 * const streamBucket = new aws.index.S3Bucket("stream_bucket", {
 *     bucket: s3BucketName,
 *     forceDestroy: true,
 * });
 * const streamBucketVersioning = new aws.index.S3BucketVersioning("stream_bucket_versioning", {
 *     bucket: streamBucket.id,
 *     versioningConfiguration: [{
 *         status: "Enabled",
 *     }],
 * });
 * const streamBucketEncryption = new aws.index.S3BucketServerSideEncryptionConfiguration("stream_bucket_encryption", {
 *     bucket: streamBucket.id,
 *     rule: [{
 *         applyServerSideEncryptionByDefault: [{
 *             sseAlgorithm: "AES256",
 *         }],
 *     }],
 * });
 * // PrivateLink for S3
 * const _this = new mongodbatlas.StreamPrivatelinkEndpoint("this", {
 *     projectId: projectId,
 *     providerName: "AWS",
 *     vendor: "S3",
 *     region: region,
 *     serviceEndpointId: serviceEndpointId,
 * });
 * export const privatelinkEndpointId = _this.id;
 * ```
 */
export declare function getStreamPrivatelinkEndpointsOutput(args: GetStreamPrivatelinkEndpointsOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetStreamPrivatelinkEndpointsResult>;
/**
 * A collection of arguments for invoking getStreamPrivatelinkEndpoints.
 */
export interface GetStreamPrivatelinkEndpointsOutputArgs {
    projectId: pulumi.Input<string>;
}
