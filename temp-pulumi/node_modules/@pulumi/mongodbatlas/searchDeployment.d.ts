import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
/**
 * ## # Resource: mongodbatlas.SearchDeployment
 *
 * `mongodbatlas.SearchDeployment` provides a Search Deployment resource. The resource lets you create, edit and delete dedicated search nodes in a cluster.
 *
 * > **NOTE:** For details on supported cloud providers and existing limitations you can visit the [Search Node Documentation](https://www.mongodb.com/docs/atlas/cluster-config/multi-cloud-distribution/#search-nodes-for-workload-isolation).
 *
 * > **NOTE:** Only a single search deployment resource can be defined for each cluster.
 *
 * ## Example Usage
 *
 * ## Import
 *
 * Search node resource can be imported using the project ID and cluster name, in the format `PROJECT_ID-CLUSTER_NAME`, e.g.
 *
 * After an import, a non-empty plan is expected if the configuration defines the `skipWaitOnUpdate` attribute. However, the update will not have any effect on the search deployment since `skipWaitOnUpdate` only relates to the update operations wait time.
 *
 * For more information see: [MongoDB Atlas API - Search Node](https://www.mongodb.com/docs/atlas/reference/api-resources-spec/#tag/Atlas-Search/operation/createAtlasSearchDeployment) Documentation.
 */
export declare class SearchDeployment extends pulumi.CustomResource {
    /**
     * Get an existing SearchDeployment resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: SearchDeploymentState, opts?: pulumi.CustomResourceOptions): SearchDeployment;
    /**
     * Returns true if the given object is an instance of SearchDeployment.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is SearchDeployment;
    /**
     * Label that identifies the cluster to return the search nodes for.
     */
    readonly clusterName: pulumi.Output<string>;
    /**
     * Flag that indicates whether to delete the search deployment if the creation times out, default is false.
     */
    readonly deleteOnCreateTimeout: pulumi.Output<boolean | undefined>;
    /**
     * Cloud service provider that manages your customer keys to provide an additional layer of Encryption At Rest for the cluster.
     */
    readonly encryptionAtRestProvider: pulumi.Output<string>;
    /**
     * Unique 24-hexadecimal digit string that identifies your project.
     */
    readonly projectId: pulumi.Output<string>;
    readonly skipWaitOnUpdate: pulumi.Output<boolean | undefined>;
    /**
     * List of settings that configure the search nodes for your cluster. This list is currently limited to defining a single element.
     */
    readonly specs: pulumi.Output<outputs.SearchDeploymentSpec[]>;
    /**
     * Human-readable label that indicates the current operating condition of this search deployment.
     */
    readonly stateName: pulumi.Output<string>;
    readonly timeouts: pulumi.Output<outputs.SearchDeploymentTimeouts | undefined>;
    /**
     * Create a SearchDeployment resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: SearchDeploymentArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering SearchDeployment resources.
 */
export interface SearchDeploymentState {
    /**
     * Label that identifies the cluster to return the search nodes for.
     */
    clusterName?: pulumi.Input<string>;
    /**
     * Flag that indicates whether to delete the search deployment if the creation times out, default is false.
     */
    deleteOnCreateTimeout?: pulumi.Input<boolean>;
    /**
     * Cloud service provider that manages your customer keys to provide an additional layer of Encryption At Rest for the cluster.
     */
    encryptionAtRestProvider?: pulumi.Input<string>;
    /**
     * Unique 24-hexadecimal digit string that identifies your project.
     */
    projectId?: pulumi.Input<string>;
    skipWaitOnUpdate?: pulumi.Input<boolean>;
    /**
     * List of settings that configure the search nodes for your cluster. This list is currently limited to defining a single element.
     */
    specs?: pulumi.Input<pulumi.Input<inputs.SearchDeploymentSpec>[]>;
    /**
     * Human-readable label that indicates the current operating condition of this search deployment.
     */
    stateName?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.SearchDeploymentTimeouts>;
}
/**
 * The set of arguments for constructing a SearchDeployment resource.
 */
export interface SearchDeploymentArgs {
    /**
     * Label that identifies the cluster to return the search nodes for.
     */
    clusterName: pulumi.Input<string>;
    /**
     * Flag that indicates whether to delete the search deployment if the creation times out, default is false.
     */
    deleteOnCreateTimeout?: pulumi.Input<boolean>;
    /**
     * Unique 24-hexadecimal digit string that identifies your project.
     */
    projectId: pulumi.Input<string>;
    skipWaitOnUpdate?: pulumi.Input<boolean>;
    /**
     * List of settings that configure the search nodes for your cluster. This list is currently limited to defining a single element.
     */
    specs: pulumi.Input<pulumi.Input<inputs.SearchDeploymentSpec>[]>;
    timeouts?: pulumi.Input<inputs.SearchDeploymentTimeouts>;
}
