import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
/**
 * ## Example Usage
 *
 * ### Create And Assign PAK Together
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as mongodbatlas from "@pulumi/mongodbatlas";
 *
 * const test = new mongodbatlas.ProjectApiKey("test", {
 *     description: "Description of your API key",
 *     projectAssignments: [{
 *         projectId: "64259ee860c43338194b0f8e",
 *         roleNames: ["GROUP_OWNER"],
 *     }],
 * });
 * ```
 *
 * ### Create And Assign PAK To Multiple Projects
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as mongodbatlas from "@pulumi/mongodbatlas";
 *
 * const test = new mongodbatlas.ProjectApiKey("test", {
 *     description: "Description of your API key",
 *     projectAssignments: [
 *         {
 *             projectId: "64259ee860c43338194b0f8e",
 *             roleNames: [
 *                 "GROUP_READ_ONLY",
 *                 "GROUP_OWNER",
 *             ],
 *         },
 *         {
 *             projectId: "74259ee860c43338194b0f8e",
 *             roleNames: ["GROUP_READ_ONLY"],
 *         },
 *     ],
 * });
 * ```
 *
 * ## Import
 *
 * API Keys must be imported using project ID, API Key ID e.g.
 *
 * ```sh
 * $ pulumi import mongodbatlas:index/projectApiKey:ProjectApiKey test 5d09d6a59ccf6445652a444a-6576974933969669
 * ```
 * See [MongoDB Atlas API - API Key](https://www.mongodb.com/docs/atlas/reference/api-resources-spec/#tag/Programmatic-API-Keys/operation/createProjectApiKey) - Documentation for more information.
 */
export declare class ProjectApiKey extends pulumi.CustomResource {
    /**
     * Get an existing ProjectApiKey resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ProjectApiKeyState, opts?: pulumi.CustomResourceOptions): ProjectApiKey;
    /**
     * Returns true if the given object is an instance of ProjectApiKey.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is ProjectApiKey;
    /**
     * Unique identifier for this Project API key.
     */
    readonly apiKeyId: pulumi.Output<string>;
    /**
     * Description of this Project API key.
     *
     * > **NOTE:** Project created by API Keys must belong to an existing organization.
     */
    readonly description: pulumi.Output<string>;
    readonly privateKey: pulumi.Output<string>;
    readonly projectAssignments: pulumi.Output<outputs.ProjectApiKeyProjectAssignment[]>;
    readonly publicKey: pulumi.Output<string>;
    /**
     * Create a ProjectApiKey resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ProjectApiKeyArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering ProjectApiKey resources.
 */
export interface ProjectApiKeyState {
    /**
     * Unique identifier for this Project API key.
     */
    apiKeyId?: pulumi.Input<string>;
    /**
     * Description of this Project API key.
     *
     * > **NOTE:** Project created by API Keys must belong to an existing organization.
     */
    description?: pulumi.Input<string>;
    privateKey?: pulumi.Input<string>;
    projectAssignments?: pulumi.Input<pulumi.Input<inputs.ProjectApiKeyProjectAssignment>[]>;
    publicKey?: pulumi.Input<string>;
}
/**
 * The set of arguments for constructing a ProjectApiKey resource.
 */
export interface ProjectApiKeyArgs {
    /**
     * Description of this Project API key.
     *
     * > **NOTE:** Project created by API Keys must belong to an existing organization.
     */
    description: pulumi.Input<string>;
    projectAssignments: pulumi.Input<pulumi.Input<inputs.ProjectApiKeyProjectAssignment>[]>;
}
