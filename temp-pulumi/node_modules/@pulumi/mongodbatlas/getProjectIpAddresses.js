"use strict";
// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.getProjectIpAddressesOutput = exports.getProjectIpAddresses = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("./utilities");
/**
 * ## # Data Source: mongodbatlas.getProjectIpAddresses
 *
 * `mongodbatlas.getProjectIpAddresses` returns the IP addresses in a project categorized by services.
 *
 * ## Example Usage
 *
 * ### S
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as mongodbatlas from "@pulumi/mongodbatlas";
 *
 * const test = mongodbatlas.getProjectIpAddresses({
 *     projectId: projectId,
 * });
 * export const projectServices = test.then(test => test.services);
 * ```
 */
function getProjectIpAddresses(args, opts) {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("mongodbatlas:index/getProjectIpAddresses:getProjectIpAddresses", {
        "projectId": args.projectId,
    }, opts);
}
exports.getProjectIpAddresses = getProjectIpAddresses;
/**
 * ## # Data Source: mongodbatlas.getProjectIpAddresses
 *
 * `mongodbatlas.getProjectIpAddresses` returns the IP addresses in a project categorized by services.
 *
 * ## Example Usage
 *
 * ### S
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as mongodbatlas from "@pulumi/mongodbatlas";
 *
 * const test = mongodbatlas.getProjectIpAddresses({
 *     projectId: projectId,
 * });
 * export const projectServices = test.then(test => test.services);
 * ```
 */
function getProjectIpAddressesOutput(args, opts) {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("mongodbatlas:index/getProjectIpAddresses:getProjectIpAddresses", {
        "projectId": args.projectId,
    }, opts);
}
exports.getProjectIpAddressesOutput = getProjectIpAddressesOutput;
//# sourceMappingURL=getProjectIpAddresses.js.map