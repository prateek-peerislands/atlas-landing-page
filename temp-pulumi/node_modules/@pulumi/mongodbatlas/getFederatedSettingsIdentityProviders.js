"use strict";
// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.getFederatedSettingsIdentityProvidersOutput = exports.getFederatedSettingsIdentityProviders = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("./utilities");
/**
 * ## # Data Source: mongodbatlas.getFederatedSettingsIdentityProviders
 *
 * `mongodbatlas.getFederatedSettingsIdentityProviders` provides an Federated Settings Identity Providers datasource. Atlas Cloud Federated Settings Identity Providers provides federated settings outputs for the configured Identity Providers.
 *
 * Note: This implementation returns a maximum of 100 results.
 */
function getFederatedSettingsIdentityProviders(args, opts) {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("mongodbatlas:index/getFederatedSettingsIdentityProviders:getFederatedSettingsIdentityProviders", {
        "federationSettingsId": args.federationSettingsId,
        "idpTypes": args.idpTypes,
        "protocols": args.protocols,
    }, opts);
}
exports.getFederatedSettingsIdentityProviders = getFederatedSettingsIdentityProviders;
/**
 * ## # Data Source: mongodbatlas.getFederatedSettingsIdentityProviders
 *
 * `mongodbatlas.getFederatedSettingsIdentityProviders` provides an Federated Settings Identity Providers datasource. Atlas Cloud Federated Settings Identity Providers provides federated settings outputs for the configured Identity Providers.
 *
 * Note: This implementation returns a maximum of 100 results.
 */
function getFederatedSettingsIdentityProvidersOutput(args, opts) {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("mongodbatlas:index/getFederatedSettingsIdentityProviders:getFederatedSettingsIdentityProviders", {
        "federationSettingsId": args.federationSettingsId,
        "idpTypes": args.idpTypes,
        "protocols": args.protocols,
    }, opts);
}
exports.getFederatedSettingsIdentityProvidersOutput = getFederatedSettingsIdentityProvidersOutput;
//# sourceMappingURL=getFederatedSettingsIdentityProviders.js.map