"use strict";
// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.getEncryptionAtRestPrivateEndpointsOutput = exports.getEncryptionAtRestPrivateEndpoints = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("./utilities");
/**
 * ## # Data Source: mongodbatlas.getEncryptionAtRestPrivateEndpoints
 *
 * `mongodbatlas.getEncryptionAtRestPrivateEndpoints` describes private endpoints of a particular cloud provider used for encryption at rest using customer-managed keys.
 *
 * ## Example Usage
 *
 * ### S
 *
 * > **NOTE:** Only Azure Key Vault with Azure Private Link and AWS KMS over AWS PrivateLink is supported at this time.
 *
 * ### Encryption At Rest Azure Key Vault Private Endpoint
 * To learn more about existing limitations, see [Manage Customer Keys with Azure Key Vault Over Private Endpoints](https://www.mongodb.com/docs/atlas/security/azure-kms-over-private-endpoint/#manage-customer-keys-with-azure-key-vault-over-private-endpoints).
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as mongodbatlas from "@pulumi/mongodbatlas";
 *
 * const plural = mongodbatlas.getEncryptionAtRestPrivateEndpoints({
 *     projectId: atlasProjectId,
 *     cloudProvider: "AZURE",
 * });
 * export const numberOfEndpoints = plural.then(plural => plural.results).length;
 * ```
 *
 * ### Encryption At Rest AWS KMS Private Endpoint
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as mongodbatlas from "@pulumi/mongodbatlas";
 *
 * const plural = mongodbatlas.getEncryptionAtRestPrivateEndpoints({
 *     projectId: atlasProjectId,
 *     cloudProvider: "AWS",
 * });
 * export const numberOfEndpoints = plural.then(plural => plural.results).length;
 * ```
 */
function getEncryptionAtRestPrivateEndpoints(args, opts) {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("mongodbatlas:index/getEncryptionAtRestPrivateEndpoints:getEncryptionAtRestPrivateEndpoints", {
        "cloudProvider": args.cloudProvider,
        "projectId": args.projectId,
    }, opts);
}
exports.getEncryptionAtRestPrivateEndpoints = getEncryptionAtRestPrivateEndpoints;
/**
 * ## # Data Source: mongodbatlas.getEncryptionAtRestPrivateEndpoints
 *
 * `mongodbatlas.getEncryptionAtRestPrivateEndpoints` describes private endpoints of a particular cloud provider used for encryption at rest using customer-managed keys.
 *
 * ## Example Usage
 *
 * ### S
 *
 * > **NOTE:** Only Azure Key Vault with Azure Private Link and AWS KMS over AWS PrivateLink is supported at this time.
 *
 * ### Encryption At Rest Azure Key Vault Private Endpoint
 * To learn more about existing limitations, see [Manage Customer Keys with Azure Key Vault Over Private Endpoints](https://www.mongodb.com/docs/atlas/security/azure-kms-over-private-endpoint/#manage-customer-keys-with-azure-key-vault-over-private-endpoints).
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as mongodbatlas from "@pulumi/mongodbatlas";
 *
 * const plural = mongodbatlas.getEncryptionAtRestPrivateEndpoints({
 *     projectId: atlasProjectId,
 *     cloudProvider: "AZURE",
 * });
 * export const numberOfEndpoints = plural.then(plural => plural.results).length;
 * ```
 *
 * ### Encryption At Rest AWS KMS Private Endpoint
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as mongodbatlas from "@pulumi/mongodbatlas";
 *
 * const plural = mongodbatlas.getEncryptionAtRestPrivateEndpoints({
 *     projectId: atlasProjectId,
 *     cloudProvider: "AWS",
 * });
 * export const numberOfEndpoints = plural.then(plural => plural.results).length;
 * ```
 */
function getEncryptionAtRestPrivateEndpointsOutput(args, opts) {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("mongodbatlas:index/getEncryptionAtRestPrivateEndpoints:getEncryptionAtRestPrivateEndpoints", {
        "cloudProvider": args.cloudProvider,
        "projectId": args.projectId,
    }, opts);
}
exports.getEncryptionAtRestPrivateEndpointsOutput = getEncryptionAtRestPrivateEndpointsOutput;
//# sourceMappingURL=getEncryptionAtRestPrivateEndpoints.js.map