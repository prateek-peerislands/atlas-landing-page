import * as pulumi from "@pulumi/pulumi";
/**
 * ## # Resource: mongodbatlas.MongodbEmployeeAccessGrant
 *
 * `mongodbatlas.MongodbEmployeeAccessGrant` provides a MongoDB Employee Access Grant resource. The resource lets you create, delete, update and import a MongoDB employee access grant.
 *
 * ## Example Usage
 *
 * ### S
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as mongodbatlas from "@pulumi/mongodbatlas";
 *
 * const example = new mongodbatlas.MongodbEmployeeAccessGrant("example", {
 *     projectId: projectId,
 *     clusterName: clusterName,
 *     grantType: "CLUSTER_INFRASTRUCTURE_AND_APP_SERVICES_SYNC_DATA",
 *     expirationTime: "2025-01-01T12:00:00Z",
 * });
 * const dsExample = mongodbatlas.getMongodbEmployeeAccessGrant({
 *     projectId: projectId,
 *     clusterName: clusterName,
 * });
 * export const grantType = dsExample.then(dsExample => dsExample.grantType);
 * export const expirationTime = dsExample.then(dsExample => dsExample.expirationTime);
 * ```
 *
 * ## Import
 *
 * The resource can be imported using project ID and cluster name, in the format `PROJECTID-CLUSTERNAME`, e.g.
 *
 * For more information see: [MongoDB Employee Access Grant API doc](https://www.mongodb.com/docs/api/doc/atlas-admin-api-v2/operation/operation-grantmongodbemployeeaccess).
 */
export declare class MongodbEmployeeAccessGrant extends pulumi.CustomResource {
    /**
     * Get an existing MongodbEmployeeAccessGrant resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: MongodbEmployeeAccessGrantState, opts?: pulumi.CustomResourceOptions): MongodbEmployeeAccessGrant;
    /**
     * Returns true if the given object is an instance of MongodbEmployeeAccessGrant.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is MongodbEmployeeAccessGrant;
    /**
     * Human-readable label that identifies this cluster.
     */
    readonly clusterName: pulumi.Output<string>;
    /**
     * Expiration date for the employee access grant.
     */
    readonly expirationTime: pulumi.Output<string>;
    /**
     * Level of access to grant to MongoDB Employees. Possible values are CLUSTER*DATABASE*LOGS, CLUSTER*INFRASTRUCTURE or CLUSTER*INFRASTRUCTURE*AND*APP*SERVICES*SYNC_DATA.
     */
    readonly grantType: pulumi.Output<string>;
    /**
     * Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.
     */
    readonly projectId: pulumi.Output<string>;
    /**
     * Create a MongodbEmployeeAccessGrant resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: MongodbEmployeeAccessGrantArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering MongodbEmployeeAccessGrant resources.
 */
export interface MongodbEmployeeAccessGrantState {
    /**
     * Human-readable label that identifies this cluster.
     */
    clusterName?: pulumi.Input<string>;
    /**
     * Expiration date for the employee access grant.
     */
    expirationTime?: pulumi.Input<string>;
    /**
     * Level of access to grant to MongoDB Employees. Possible values are CLUSTER*DATABASE*LOGS, CLUSTER*INFRASTRUCTURE or CLUSTER*INFRASTRUCTURE*AND*APP*SERVICES*SYNC_DATA.
     */
    grantType?: pulumi.Input<string>;
    /**
     * Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.
     */
    projectId?: pulumi.Input<string>;
}
/**
 * The set of arguments for constructing a MongodbEmployeeAccessGrant resource.
 */
export interface MongodbEmployeeAccessGrantArgs {
    /**
     * Human-readable label that identifies this cluster.
     */
    clusterName: pulumi.Input<string>;
    /**
     * Expiration date for the employee access grant.
     */
    expirationTime: pulumi.Input<string>;
    /**
     * Level of access to grant to MongoDB Employees. Possible values are CLUSTER*DATABASE*LOGS, CLUSTER*INFRASTRUCTURE or CLUSTER*INFRASTRUCTURE*AND*APP*SERVICES*SYNC_DATA.
     */
    grantType: pulumi.Input<string>;
    /**
     * Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.
     */
    projectId: pulumi.Input<string>;
}
