"use strict";
// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.getFederatedSettingsOutput = exports.getFederatedSettings = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("./utilities");
/**
 * ## # Data Source: mongodbatlas.getFederatedSettings
 *
 * `mongodbatlas.getFederatedSettings` provides a federated settings data source. Atlas Cloud federated settings provides federated settings outputs.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as mongodbatlas from "@pulumi/mongodbatlas";
 *
 * const settings = mongodbatlas.getFederatedSettings({
 *     orgId: "627a9683e7f7f7ff7fe306f14",
 * });
 * ```
 */
function getFederatedSettings(args, opts) {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("mongodbatlas:index/getFederatedSettings:getFederatedSettings", {
        "orgId": args.orgId,
    }, opts);
}
exports.getFederatedSettings = getFederatedSettings;
/**
 * ## # Data Source: mongodbatlas.getFederatedSettings
 *
 * `mongodbatlas.getFederatedSettings` provides a federated settings data source. Atlas Cloud federated settings provides federated settings outputs.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as mongodbatlas from "@pulumi/mongodbatlas";
 *
 * const settings = mongodbatlas.getFederatedSettings({
 *     orgId: "627a9683e7f7f7ff7fe306f14",
 * });
 * ```
 */
function getFederatedSettingsOutput(args, opts) {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("mongodbatlas:index/getFederatedSettings:getFederatedSettings", {
        "orgId": args.orgId,
    }, opts);
}
exports.getFederatedSettingsOutput = getFederatedSettingsOutput;
//# sourceMappingURL=getFederatedSettings.js.map