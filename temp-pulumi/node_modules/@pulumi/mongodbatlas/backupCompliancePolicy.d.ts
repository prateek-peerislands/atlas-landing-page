import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as mongodbatlas from "@pulumi/mongodbatlas";
 *
 * const myCluster = new mongodbatlas.AdvancedCluster("my_cluster", {
 *     projectId: "<PROJECT-ID>",
 *     name: "clusterTest",
 *     clusterType: "REPLICASET",
 *     backupEnabled: true,
 *     replicationSpecs: [{
 *         regionConfigs: [{
 *             priority: 7,
 *             providerName: "AWS",
 *             regionName: region,
 *             electableSpecs: {
 *                 instanceSize: "M10",
 *                 nodeCount: 3,
 *             },
 *         }],
 *     }],
 * });
 * const testCloudBackupSchedule = new mongodbatlas.CloudBackupSchedule("test", {
 *     projectId: myCluster.projectId,
 *     clusterName: myCluster.name,
 *     referenceHourOfDay: 3,
 *     referenceMinuteOfHour: 45,
 *     restoreWindowDays: 4,
 *     policyItemHourly: {
 *         frequencyInterval: 1,
 *         retentionUnit: "days",
 *         retentionValue: 7,
 *     },
 *     policyItemDaily: {
 *         frequencyInterval: 1,
 *         retentionUnit: "days",
 *         retentionValue: 7,
 *     },
 *     policyItemWeeklies: [{
 *         frequencyInterval: 1,
 *         retentionUnit: "weeks",
 *         retentionValue: 4,
 *     }],
 *     policyItemMonthlies: [{
 *         frequencyInterval: 1,
 *         retentionUnit: "months",
 *         retentionValue: 12,
 *     }],
 *     policyItemYearlies: [{
 *         frequencyInterval: 1,
 *         retentionUnit: "years",
 *         retentionValue: 1,
 *     }],
 * });
 * const test = mongodbatlas.getCloudBackupScheduleOutput({
 *     projectId: testCloudBackupSchedule.projectId,
 *     clusterName: testCloudBackupSchedule.clusterName,
 * });
 * const backupPolicy = mongodbatlas.getBackupCompliancePolicyOutput({
 *     projectId: testCloudBackupSchedule.projectId,
 * });
 * const backupPolicyBackupCompliancePolicy = new mongodbatlas.BackupCompliancePolicy("backup_policy", {
 *     projectId: "<PROJECT-ID>",
 *     authorizedEmail: "user@email.com",
 *     authorizedUserFirstName: "First",
 *     authorizedUserLastName: "Last",
 *     copyProtectionEnabled: false,
 *     pitEnabled: false,
 *     encryptionAtRestEnabled: false,
 *     restoreWindowDays: 7,
 *     onDemandPolicyItem: {
 *         frequencyInterval: 1,
 *         retentionUnit: "days",
 *         retentionValue: 3,
 *     },
 *     policyItemHourly: {
 *         frequencyInterval: 1,
 *         retentionUnit: "days",
 *         retentionValue: 7,
 *     },
 *     policyItemDaily: {
 *         frequencyInterval: 1,
 *         retentionUnit: "days",
 *         retentionValue: 7,
 *     },
 *     policyItemWeeklies: [{
 *         frequencyInterval: 1,
 *         retentionUnit: "weeks",
 *         retentionValue: 4,
 *     }],
 *     policyItemMonthlies: [{
 *         frequencyInterval: 1,
 *         retentionUnit: "months",
 *         retentionValue: 12,
 *     }],
 *     policyItemYearlies: [{
 *         frequencyInterval: 1,
 *         retentionUnit: "years",
 *         retentionValue: 1,
 *     }],
 * });
 * ```
 *
 * ## Import
 *
 * Backup Compliance Policy entries can be imported using project project_id  in the format `project_id`, e.g.
 *
 * ```sh
 * $ pulumi import mongodbatlas:index/backupCompliancePolicy:BackupCompliancePolicy backup_policy 5d0f1f73cf09a29120e173cf
 * ```
 * For more information see: [MongoDB Atlas API Reference](https://www.mongodb.com/docs/atlas/reference/api-resources-spec/#tag/Cloud-Backups/operation/updateDataProtectionSettings) and [Backup Compliance Policy Prohibited Actions](https://www.mongodb.com/docs/atlas/backup/cloud-backup/backup-compliance-policy/#prohibited-actions).
 */
export declare class BackupCompliancePolicy extends pulumi.CustomResource {
    /**
     * Get an existing BackupCompliancePolicy resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: BackupCompliancePolicyState, opts?: pulumi.CustomResourceOptions): BackupCompliancePolicy;
    /**
     * Returns true if the given object is an instance of BackupCompliancePolicy.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is BackupCompliancePolicy;
    /**
     * Email address of a security or legal representative for the Backup Compliance Policy who is authorized to update the Backup Compliance Policy settings.
     */
    readonly authorizedEmail: pulumi.Output<string>;
    /**
     * First name of the user who authorized to update the Backup Compliance Policy settings.
     */
    readonly authorizedUserFirstName: pulumi.Output<string>;
    /**
     * Last name of the user who authorized to update the Backup Compliance Policy settings.
     */
    readonly authorizedUserLastName: pulumi.Output<string>;
    /**
     * Flag that indicates whether to enable additional backup copies for the cluster. If unspecified, this value defaults to false.
     */
    readonly copyProtectionEnabled: pulumi.Output<boolean | undefined>;
    /**
     * Flag that indicates whether Encryption at Rest using Customer Key Management is required for all clusters with a Backup Compliance Policy. If unspecified, this value defaults to false.
     */
    readonly encryptionAtRestEnabled: pulumi.Output<boolean | undefined>;
    /**
     * Specifications for on-demand policy.
     */
    readonly onDemandPolicyItem: pulumi.Output<outputs.BackupCompliancePolicyOnDemandPolicyItem | undefined>;
    /**
     * Flag that indicates whether the cluster uses Continuous Cloud Backups with a Backup Compliance Policy. If unspecified, this value defaults to false.
     */
    readonly pitEnabled: pulumi.Output<boolean | undefined>;
    /**
     * Scheduled policy using a daily frequency type, see block fields.
     */
    readonly policyItemDaily: pulumi.Output<outputs.BackupCompliancePolicyPolicyItemDaily | undefined>;
    /**
     * Scheduled policy using an hourly frequency type, see block fields.
     */
    readonly policyItemHourly: pulumi.Output<outputs.BackupCompliancePolicyPolicyItemHourly | undefined>;
    /**
     * Scheduled policy using a monthly frequency type, see block fields.
     */
    readonly policyItemMonthlies: pulumi.Output<outputs.BackupCompliancePolicyPolicyItemMonthly[] | undefined>;
    /**
     * Scheduled policy using a weekly frequency type, see block fields.
     */
    readonly policyItemWeeklies: pulumi.Output<outputs.BackupCompliancePolicyPolicyItemWeekly[] | undefined>;
    /**
     * Scheduled policy using a yearly frequency type, see block fields.
     */
    readonly policyItemYearlies: pulumi.Output<outputs.BackupCompliancePolicyPolicyItemYearly[] | undefined>;
    /**
     * Unique 24-hexadecimal digit string that identifies your project.
     */
    readonly projectId: pulumi.Output<string>;
    /**
     * Number of previous days that you can restore back to with Continuous Cloud Backup with a Backup Compliance Policy. You must specify a positive, non-zero integer, and the maximum retention window can't exceed the hourly retention time. This parameter applies only to Continuous Cloud Backups with a Backup Compliance Policy.
     */
    readonly restoreWindowDays: pulumi.Output<number>;
    /**
     * Label that indicates the state of the Backup Compliance Policy settings. MongoDB Cloud ignores this setting when you enable or update the Backup Compliance Policy settings.
     */
    readonly state: pulumi.Output<string>;
    /**
     * ISO 8601 timestamp format in UTC that indicates when the user updated the Data Protection Policy settings. MongoDB Cloud ignores this setting when you enable or update the Backup Compliance Policy settings.
     */
    readonly updatedDate: pulumi.Output<string>;
    /**
     * Email address that identifies the user who updated the Backup Compliance Policy settings. MongoDB Cloud ignores this email setting when you enable or update the Backup Compliance Policy settings.
     */
    readonly updatedUser: pulumi.Output<string>;
    /**
     * Create a BackupCompliancePolicy resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: BackupCompliancePolicyArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering BackupCompliancePolicy resources.
 */
export interface BackupCompliancePolicyState {
    /**
     * Email address of a security or legal representative for the Backup Compliance Policy who is authorized to update the Backup Compliance Policy settings.
     */
    authorizedEmail?: pulumi.Input<string>;
    /**
     * First name of the user who authorized to update the Backup Compliance Policy settings.
     */
    authorizedUserFirstName?: pulumi.Input<string>;
    /**
     * Last name of the user who authorized to update the Backup Compliance Policy settings.
     */
    authorizedUserLastName?: pulumi.Input<string>;
    /**
     * Flag that indicates whether to enable additional backup copies for the cluster. If unspecified, this value defaults to false.
     */
    copyProtectionEnabled?: pulumi.Input<boolean>;
    /**
     * Flag that indicates whether Encryption at Rest using Customer Key Management is required for all clusters with a Backup Compliance Policy. If unspecified, this value defaults to false.
     */
    encryptionAtRestEnabled?: pulumi.Input<boolean>;
    /**
     * Specifications for on-demand policy.
     */
    onDemandPolicyItem?: pulumi.Input<inputs.BackupCompliancePolicyOnDemandPolicyItem>;
    /**
     * Flag that indicates whether the cluster uses Continuous Cloud Backups with a Backup Compliance Policy. If unspecified, this value defaults to false.
     */
    pitEnabled?: pulumi.Input<boolean>;
    /**
     * Scheduled policy using a daily frequency type, see block fields.
     */
    policyItemDaily?: pulumi.Input<inputs.BackupCompliancePolicyPolicyItemDaily>;
    /**
     * Scheduled policy using an hourly frequency type, see block fields.
     */
    policyItemHourly?: pulumi.Input<inputs.BackupCompliancePolicyPolicyItemHourly>;
    /**
     * Scheduled policy using a monthly frequency type, see block fields.
     */
    policyItemMonthlies?: pulumi.Input<pulumi.Input<inputs.BackupCompliancePolicyPolicyItemMonthly>[]>;
    /**
     * Scheduled policy using a weekly frequency type, see block fields.
     */
    policyItemWeeklies?: pulumi.Input<pulumi.Input<inputs.BackupCompliancePolicyPolicyItemWeekly>[]>;
    /**
     * Scheduled policy using a yearly frequency type, see block fields.
     */
    policyItemYearlies?: pulumi.Input<pulumi.Input<inputs.BackupCompliancePolicyPolicyItemYearly>[]>;
    /**
     * Unique 24-hexadecimal digit string that identifies your project.
     */
    projectId?: pulumi.Input<string>;
    /**
     * Number of previous days that you can restore back to with Continuous Cloud Backup with a Backup Compliance Policy. You must specify a positive, non-zero integer, and the maximum retention window can't exceed the hourly retention time. This parameter applies only to Continuous Cloud Backups with a Backup Compliance Policy.
     */
    restoreWindowDays?: pulumi.Input<number>;
    /**
     * Label that indicates the state of the Backup Compliance Policy settings. MongoDB Cloud ignores this setting when you enable or update the Backup Compliance Policy settings.
     */
    state?: pulumi.Input<string>;
    /**
     * ISO 8601 timestamp format in UTC that indicates when the user updated the Data Protection Policy settings. MongoDB Cloud ignores this setting when you enable or update the Backup Compliance Policy settings.
     */
    updatedDate?: pulumi.Input<string>;
    /**
     * Email address that identifies the user who updated the Backup Compliance Policy settings. MongoDB Cloud ignores this email setting when you enable or update the Backup Compliance Policy settings.
     */
    updatedUser?: pulumi.Input<string>;
}
/**
 * The set of arguments for constructing a BackupCompliancePolicy resource.
 */
export interface BackupCompliancePolicyArgs {
    /**
     * Email address of a security or legal representative for the Backup Compliance Policy who is authorized to update the Backup Compliance Policy settings.
     */
    authorizedEmail: pulumi.Input<string>;
    /**
     * First name of the user who authorized to update the Backup Compliance Policy settings.
     */
    authorizedUserFirstName: pulumi.Input<string>;
    /**
     * Last name of the user who authorized to update the Backup Compliance Policy settings.
     */
    authorizedUserLastName: pulumi.Input<string>;
    /**
     * Flag that indicates whether to enable additional backup copies for the cluster. If unspecified, this value defaults to false.
     */
    copyProtectionEnabled?: pulumi.Input<boolean>;
    /**
     * Flag that indicates whether Encryption at Rest using Customer Key Management is required for all clusters with a Backup Compliance Policy. If unspecified, this value defaults to false.
     */
    encryptionAtRestEnabled?: pulumi.Input<boolean>;
    /**
     * Specifications for on-demand policy.
     */
    onDemandPolicyItem?: pulumi.Input<inputs.BackupCompliancePolicyOnDemandPolicyItem>;
    /**
     * Flag that indicates whether the cluster uses Continuous Cloud Backups with a Backup Compliance Policy. If unspecified, this value defaults to false.
     */
    pitEnabled?: pulumi.Input<boolean>;
    /**
     * Scheduled policy using a daily frequency type, see block fields.
     */
    policyItemDaily?: pulumi.Input<inputs.BackupCompliancePolicyPolicyItemDaily>;
    /**
     * Scheduled policy using an hourly frequency type, see block fields.
     */
    policyItemHourly?: pulumi.Input<inputs.BackupCompliancePolicyPolicyItemHourly>;
    /**
     * Scheduled policy using a monthly frequency type, see block fields.
     */
    policyItemMonthlies?: pulumi.Input<pulumi.Input<inputs.BackupCompliancePolicyPolicyItemMonthly>[]>;
    /**
     * Scheduled policy using a weekly frequency type, see block fields.
     */
    policyItemWeeklies?: pulumi.Input<pulumi.Input<inputs.BackupCompliancePolicyPolicyItemWeekly>[]>;
    /**
     * Scheduled policy using a yearly frequency type, see block fields.
     */
    policyItemYearlies?: pulumi.Input<pulumi.Input<inputs.BackupCompliancePolicyPolicyItemYearly>[]>;
    /**
     * Unique 24-hexadecimal digit string that identifies your project.
     */
    projectId: pulumi.Input<string>;
    /**
     * Number of previous days that you can restore back to with Continuous Cloud Backup with a Backup Compliance Policy. You must specify a positive, non-zero integer, and the maximum retention window can't exceed the hourly retention time. This parameter applies only to Continuous Cloud Backups with a Backup Compliance Policy.
     */
    restoreWindowDays?: pulumi.Input<number>;
}
